
CBASIC_START
compiledBasic:
	call ZXHeapClear
	LD (runtimeSaveSP),SP
	LD HL,DATA_11
	LD (DATAPTR),HL
; 30.1  DIM a$(2,9)
	LD HL,ZXBASIC_VAR_a_string
	LD BC,30
	CALL runtimeClearStringArray
ZXBASIC_LINE_2:
; 2  CLEAR 65329
	LD HL,2
	LD (23621),HL
; 		2.1  CLEAR 65329{00 00 31 ff 00 }
	LD A,1
	LD (23623),a
; 		2.2 \000
	LD A,2
	LD (23623),a
ZXBASIC_LINE_3:
; 3  LET start=65330
	LD HL,3
	LD (23621),HL
; 		3.1  LET start=65330{00 00 32 ff 00 }
	LD A,1
	LD (23623),a
	LD HL,65330
	LD (ZXBASIC_VAR_start),HL
ZXBASIC_LINE_4:
; 4  LET errsp= PEEK 23613+256* PEEK 23614
	LD HL,4
	LD (23621),HL
; 		4.1  LET errsp= PEEK 23613{00 00 3d 5c 00 }+256{00 00 00 01 00 }* PEEK 23614{00 00 3e 5c 00 }
	LD A,1
	LD (23623),a
; PEEK
	LD A,(23613)
	LD L,A
	LD H,0
	PUSH HL
	LD HL,256
	PUSH HL
; PEEK
	LD A,(23614)
	LD L,A
	LD H,0
; *
	POP DE
	call runtimeMult16bit
; +
	POP DE
	ADD HL,DE
	LD (ZXBASIC_VAR_errsp),HL
ZXBASIC_LINE_5:
; 5  REM  POKE errsp,start-256* INT (start/256)
	LD HL,5
	LD (23621),HL
	LD A,1
	LD (23623),a
ZXBASIC_LINE_6:
; 6  REM  POKE errsp+1, INT (start/256)
	LD HL,6
	LD (23621),HL
	LD A,1
	LD (23623),a
ZXBASIC_LINE_7:
; 7  READ n
	LD HL,7
	LD (23621),HL
; 		7.1  READ n
	LD A,1
	LD (23623),a
	LD HL,(DATAPTR)
	LD DE,(HL)
	INC HL
	INC HL
	LD (DATAPTR),HL
	LD (ZXBASIC_VAR_n),DE
ZXBASIC_LINE_8:
; 8  FOR j=start TO start+n-1
	LD HL,8
	LD (23621),HL
; 		8.1  FOR j=start TO start+n-1{00 00 01 00 00 }
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,(ZXBASIC_VAR_start)
	LD (ZXBASIC_VAR_j),HL
	LD DE,HL
	LD HL,(ZXBASIC_VAR_n)
; +
	ADD HL,DE
	LD DE,1
; -
	SUB HL,DE
	LD (ZXBASIC_VAR_for_j),HL
FOR_0:
ZXBASIC_LINE_9:
; 9  READ a
	LD HL,9
	LD (23621),HL
; 		9.1  READ a
	LD A,1
	LD (23623),a
	LD HL,(DATAPTR)
	LD DE,(HL)
	INC HL
	INC HL
	LD (DATAPTR),HL
	LD (ZXBASIC_VAR_a),DE
ZXBASIC_LINE_10:
; 10  NEXT j
	LD HL,10
	LD (23621),HL
; 		10.1  NEXT j
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,(ZXBASIC_VAR_j)
	INC HL
	LD (ZXBASIC_VAR_j),HL
	LD DE,(ZXBASIC_VAR_for_j)
	EX HL,DE
	SUB HL,DE
	JP NC,FOR_0
ZXBASIC_LINE_11:
; 11  DATA 33,33,3,19,58,58,92,254,20,40,4,254,12,32,15,33
	LD HL,11
	LD (23621),HL
; 		11.1  DATA 33{00 00 21 00 00 },33{00 00 21 00 00 },3{00 00 03 00 00 },19{00 00 13 00 00 },58{00 00 3a 00 00 },58{00 00 3a 00 00 },92{00 00 5c 00 00 },254{00 00 fe 00 00 },20{00 00 14 00 00 },40{00 00 28 00 00 },4{00 00 04 00 00 },254{00 00 fe 00 00 },12{00 00 0c 00 00 },32{00 00 20 00 00 },15{00 00 0f 00 00 },33{00 00 21 00 00 }
	LD A,1
	LD (23623),a
ZXBASIC_LINE_12:
; 12  DATA start-256* INT (start/256), INT (start/256)
	LD HL,12
	LD (23621),HL
; 		12.1  DATA start-256{00 00 00 01 00 }* INT (start/256{00 00 00 01 00 }), INT (start/256{00 00 00 01 00 })
	LD A,1
	LD (23623),a
ZXBASIC_LINE_13:
; 13  DATA 229,253,54,0,255,253,203,1,174,195,125,27,229,195,3,19
	LD HL,13
	LD (23621),HL
; 		13.1  DATA 229{00 00 e5 00 00 },253{00 00 fd 00 00 },54{00 00 36 00 00 },0{00 00 00 00 00 },255{00 00 ff 00 00 },253{00 00 fd 00 00 },203{00 00 cb 00 00 },1{00 00 01 00 00 },174{00 00 ae 00 00 },195{00 00 c3 00 00 },125{00 00 7d 00 00 },27{00 00 1b 00 00 },229{00 00 e5 00 00 },195{00 00 c3 00 00 },3{00 00 03 00 00 },19{00 00 13 00 00 }
	LD A,1
	LD (23623),a
ZXBASIC_LINE_20:
; 20  REM *** SINCLAIR BASIC ***
	LD HL,20
	LD (23621),HL
	LD A,1
	LD (23623),a
ZXBASIC_LINE_25:
; 25  RESTORE 1030
	LD HL,25
	LD (23621),HL
; 		25.1  RESTORE 1030{00 00 06 04 00 }
	LD A,1
	LD (23623),a
	LD DE,1030
	LD HL,ZXDATA
	CALL runtimeFindLine
	EX HL,DE
	LD (DATAPTR),DE
ZXBASIC_LINE_30:
; 30  DIM a$(2,9)
	LD HL,30
	LD (23621),HL
; 		30.1  DIM a$(2{00 00 02 00 00 },9{00 00 09 00 00 })
	LD A,1
	LD (23623),a
	LD HL,ZXBASIC_VAR_a_string
	LD BC,30
	CALL runtimeClearStringArray
ZXBASIC_LINE_40:
; 40  GOSUB 1030
	LD HL,40
	LD (23621),HL
; 		40.1  GOSUB 1030{00 00 06 04 00 }
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	CALL ZXBASIC_LINE_1030
ZXBASIC_LINE_50:
; 50  GOSUB 590
	LD HL,50
	LD (23621),HL
; 		50.1  GOSUB 590{00 00 4e 02 00 }
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	CALL ZXBASIC_LINE_590
ZXBASIC_LINE_60:
; 60  GOSUB 790
	LD HL,60
	LD (23621),HL
; 		60.1  GOSUB 790{00 00 16 03 00 }
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	CALL ZXBASIC_LINE_790
ZXBASIC_LINE_70:
; 70  GOSUB 890
	LD HL,70
	LD (23621),HL
; 		70.1  GOSUB 890{00 00 7a 03 00 }
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	CALL ZXBASIC_LINE_890
ZXBASIC_LINE_80:
; 80  REM ===== LOOP =====
	LD HL,80
	LD (23621),HL
	LD A,1
	LD (23623),a
ZXBASIC_LINE_90:
; 90  GOSUB 390
	LD HL,90
	LD (23621),HL
; 		90.1  GOSUB 390{00 00 86 01 00 }
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	CALL ZXBASIC_LINE_390
ZXBASIC_LINE_100:
; 100  LET k$= INKEY$ : LET k= IN 57342: LET k1= IN 64510: LET jj= IN 31
	LD HL,100
	LD (23621),HL
; 		100.1  LET k$= INKEY$ 
	LD A,1
	LD (23623),a
; INKEY$
	CALL runtimeInkey
	LD DE,HL
	LD HL,ZXBASIC_VAR_k_string
	CALL runtimeStoreString
; 		100.2  LET k= IN 57342{00 00 fe df 00 }
	LD A,2
	LD (23623),a
; IN
	LD HL,57342
	LD BC,HL
	IN A,(C)
	LD L,A
	LD H,0
	LD (ZXBASIC_VAR_k),HL
; 		100.3  LET k1= IN 64510{00 00 fe fb 00 }
	LD A,3
	LD (23623),a
; IN
	LD HL,64510
	LD BC,HL
	IN A,(C)
	LD L,A
	LD H,0
	LD (ZXBASIC_VAR_k1),HL
; 		100.4  LET jj= IN 31{00 00 1f 00 00 }
	LD A,4
	LD (23623),a
; IN
	LD HL,31
	LD BC,HL
	IN A,(C)
	LD L,A
	LD H,0
	LD (ZXBASIC_VAR_jj),HL
ZXBASIC_LINE_101:
; 101  REM pause 9
	LD HL,101
	LD (23621),HL
	LD A,1
	LD (23623),a
	LD HL,9
	CALL runtimePauseAbs
ZXBASIC_LINE_105:
; 105  IF r=1 THEN  LET x=x+(k=190 AND x<25)-(k=189 AND x>6): LET y=y+(k$="" AND y<20)-(k1=190 AND y>1)
	LD HL,105
	LD (23621),HL
; 		105.1  IF r=1{00 00 01 00 00 } THEN  LET x=x+(k=190{00 00 be 00 00 } AND x<25{00 00 19 00 00 })-(k=189{00 00 bd 00 00 } AND x>6{00 00 06 00 00 })
	LD A,1
	LD (23623),a
	LD DE,(ZXBASIC_VAR_r)
	LD HL,1
; =
	CALL runtimeCmpHLEqDE
	LD A,L
	CP 0
	JP Z,ZXB_LABEL_1
; 		105.2  LET x=x+(k=190{00 00 be 00 00 } AND x<25{00 00 19 00 00 })-(k=189{00 00 bd 00 00 } AND x>6{00 00 06 00 00 })
	LD A,2
	LD (23623),a
	LD HL,(ZXBASIC_VAR_x)
	PUSH HL
; (
	LD DE,(ZXBASIC_VAR_k)
	LD HL,190
; =
	CALL runtimeCmpHLEqDE
	PUSH HL
	LD DE,(ZXBASIC_VAR_x)
	LD HL,25
; <
	CALL runtimeCmpHLltDE
; AND
	POP DE
	call runtimeAndHLDE
; )
; +
	POP DE
	ADD HL,DE
	PUSH HL
; (
	LD DE,(ZXBASIC_VAR_k)
	LD HL,189
; =
	CALL runtimeCmpHLEqDE
	PUSH HL
	LD DE,(ZXBASIC_VAR_x)
	LD HL,6
; >
	CALL runtimeCmpHlGtDE
; AND
	POP DE
	call runtimeAndHLDE
; )
; -
	POP DE
	EX HL,DE
	SUB HL,DE
	LD (ZXBASIC_VAR_x),HL
; 		105.3  LET y=y+(k$="" AND y<20{00 00 14 00 00 })-(k1=190{00 00 be 00 00 } AND y>1{00 00 01 00 00 })
	LD A,3
	LD (23623),a
	LD HL,(ZXBASIC_VAR_y)
	PUSH HL
; (
	LD DE,(ZXBASIC_VAR_k_string)
	LD HL,STRING_0	;
; =
	CALL runtimeEqualString
	PUSH HL
	LD DE,(ZXBASIC_VAR_y)
	LD HL,20
; <
	CALL runtimeCmpHLltDE
; AND
	POP DE
	call runtimeAndHLDE
; )
; +
	POP DE
	ADD HL,DE
	PUSH HL
; (
	LD DE,(ZXBASIC_VAR_k1)
	LD HL,190
; =
	CALL runtimeCmpHLEqDE
	PUSH HL
	LD DE,(ZXBASIC_VAR_y)
	LD HL,1
; >
	CALL runtimeCmpHlGtDE
; AND
	POP DE
	call runtimeAndHLDE
; )
; -
	POP DE
	EX HL,DE
	SUB HL,DE
	LD (ZXBASIC_VAR_y),HL
	CALL ZXFreeTempCompact
ZXB_LABEL_1:
	CALL ZXFreeTempCompact
ZXBASIC_LINE_110:
; 110  IF r=2 THEN  LET x=x+(jj=1 AND x<25)-(jj=2 AND x>6): LET y=y+(jj=0 AND y<20)-(jj=8 AND y>1)
	LD HL,110
	LD (23621),HL
; 		110.1  IF r=2{00 00 02 00 00 } THEN  LET x=x+(jj=1{00 00 01 00 00 } AND x<25{00 00 19 00 00 })-(jj=2{00 00 02 00 00 } AND x>6{00 00 06 00 00 })
	LD A,1
	LD (23623),a
	LD DE,(ZXBASIC_VAR_r)
	LD HL,2
; =
	CALL runtimeCmpHLEqDE
	LD A,L
	CP 0
	JP Z,ZXB_LABEL_2
; 		110.2  LET x=x+(jj=1{00 00 01 00 00 } AND x<25{00 00 19 00 00 })-(jj=2{00 00 02 00 00 } AND x>6{00 00 06 00 00 })
	LD A,2
	LD (23623),a
	LD HL,(ZXBASIC_VAR_x)
	PUSH HL
; (
	LD DE,(ZXBASIC_VAR_jj)
	LD HL,1
; =
	CALL runtimeCmpHLEqDE
	PUSH HL
	LD DE,(ZXBASIC_VAR_x)
	LD HL,25
; <
	CALL runtimeCmpHLltDE
; AND
	POP DE
	call runtimeAndHLDE
; )
; +
	POP DE
	ADD HL,DE
	PUSH HL
; (
	LD DE,(ZXBASIC_VAR_jj)
	LD HL,2
; =
	CALL runtimeCmpHLEqDE
	PUSH HL
	LD DE,(ZXBASIC_VAR_x)
	LD HL,6
; >
	CALL runtimeCmpHlGtDE
; AND
	POP DE
	call runtimeAndHLDE
; )
; -
	POP DE
	EX HL,DE
	SUB HL,DE
	LD (ZXBASIC_VAR_x),HL
; 		110.3  LET y=y+(jj=0{00 00 00 00 00 } AND y<20{00 00 14 00 00 })-(jj=8{00 00 08 00 00 } AND y>1{00 00 01 00 00 })
	LD A,3
	LD (23623),a
	LD HL,(ZXBASIC_VAR_y)
	PUSH HL
; (
	LD DE,(ZXBASIC_VAR_jj)
	LD HL,0
; =
	CALL runtimeCmpHLEqDE
	PUSH HL
	LD DE,(ZXBASIC_VAR_y)
	LD HL,20
; <
	CALL runtimeCmpHLltDE
; AND
	POP DE
	call runtimeAndHLDE
; )
; +
	POP DE
	ADD HL,DE
	PUSH HL
; (
	LD DE,(ZXBASIC_VAR_jj)
	LD HL,8
; =
	CALL runtimeCmpHLEqDE
	PUSH HL
	LD DE,(ZXBASIC_VAR_y)
	LD HL,1
; >
	CALL runtimeCmpHlGtDE
; AND
	POP DE
	call runtimeAndHLDE
; )
; -
	POP DE
	EX HL,DE
	SUB HL,DE
	LD (ZXBASIC_VAR_y),HL
ZXB_LABEL_2:
ZXBASIC_LINE_120:
; 120  IF  POINT (x*8,8*(21-y))=1 THEN  LET x=ox: LET y=oy
	LD HL,120
	LD (23621),HL
; 		120.1  IF  POINT (x*8{00 00 08 00 00 },8{00 00 08 00 00 }*(21{00 00 15 00 00 }-y))=1{00 00 01 00 00 } THEN  LET x=ox
	LD A,1
	LD (23623),a
; POINT
	LD DE,(ZXBASIC_VAR_x)
	LD HL,8
; *
	call runtimeMult16bit
	PUSH HL
	LD HL,8
	PUSH HL
; (
	LD HL,21
	LD DE,(ZXBASIC_VAR_y)
; -
	SUB HL,DE
; )
; *
	POP DE
	call runtimeMult16bit
	POP DE
	CALL runtimePoint
	LD DE,HL
	LD HL,1
; =
	CALL runtimeCmpHLEqDE
	LD A,L
	CP 0
	JP Z,ZXB_LABEL_3
; 		120.2  LET x=ox
	LD A,2
	LD (23623),a
	LD HL,(ZXBASIC_VAR_ox)
	LD (ZXBASIC_VAR_x),HL
; 		120.3  LET y=oy
	LD A,3
	LD (23623),a
	LD HL,(ZXBASIC_VAR_oy)
	LD (ZXBASIC_VAR_y),HL
ZXB_LABEL_3:
ZXBASIC_LINE_130:
; 130  IF oy <> y OR ox <> x THEN  PRINT  AT oy,ox;" "
	LD HL,130
	LD (23621),HL
; 		130.1  IF oy <> y OR ox <> x THEN  PRINT  AT oy,ox;" "
	LD A,1
	LD (23623),a
	LD DE,(ZXBASIC_VAR_oy)
	LD HL,(ZXBASIC_VAR_y)
; <>
	CALL runtimeCmpHlNeDE
	PUSH HL
	LD DE,(ZXBASIC_VAR_ox)
	LD HL,(ZXBASIC_VAR_x)
; <>
	CALL runtimeCmpHlNeDE
; OR
	POP DE
	call runtimeOrHLDE
	LD A,L
	CP 0
	JP Z,ZXB_LABEL_4
; 		130.2  PRINT  AT oy,ox;" "
	LD A,2
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,(ZXBASIC_VAR_oy)
	LD HL,(ZXBASIC_VAR_ox)
	CALL runtimePrintAt
	LD HL,STRING_1	; 
	CALL runtimePrintString
	CALL runtimePrintNewline
	POP AF
	LD (ZX_P_FLAG),A
ZXB_LABEL_4:
ZXBASIC_LINE_140:
; 140  IF  ATTR (y,x)=175 THEN  BEEP .01,12: LET q=q+1
	LD HL,140
	LD (23621),HL
; 		140.1  IF  ATTR (y,x)=175{00 00 af 00 00 } THEN  BEEP .01{7a 23 d7 0a 3d },12{00 00 0c 00 00 }
	LD A,1
	LD (23623),a
; ATTR
	LD DE,(ZXBASIC_VAR_y)
	LD HL,(ZXBASIC_VAR_x)
	CALL runtimeAttr
	LD DE,HL
	LD HL,175
; =
	CALL runtimeCmpHLEqDE
	LD A,L
	CP 0
	JP Z,ZXB_LABEL_5
; 		140.2  BEEP .01{7a 23 d7 0a 3d },12{00 00 0c 00 00 }
	LD A,2
	LD (23623),a
	LD HL,FLOAT_1	;.01
	CALL runtimePushFloatVar
	LD HL,12
	CALL runtimeIntToFloat
	CALL $03F8
; 		140.3  LET q=q+1{00 00 01 00 00 }
	LD A,3
	LD (23623),a
	LD HL,(ZXBASIC_VAR_q)
	INC HL
; +
	LD (ZXBASIC_VAR_q),HL
ZXB_LABEL_5:
ZXBASIC_LINE_150:
; 150  GOSUB 190
	LD HL,150
	LD (23621),HL
; 		150.1  GOSUB 190{00 00 be 00 00 }
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	CALL ZXBASIC_LINE_190
ZXBASIC_LINE_160:
; 160  PRINT  AT y,x; INK 1;g$(1)
	LD HL,160
	LD (23621),HL
; 		160.1  PRINT  AT y,x; INK 1{00 00 01 00 00 };g$(1{00 00 01 00 00 })
	LD A,1
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,(ZXBASIC_VAR_y)
	LD HL,(ZXBASIC_VAR_x)
	CALL runtimePrintAt
	LD HL,1
	CALL runtimeLocalInk
	LD HL,(ZXBASIC_VAR_g_string)
	PUSH HL
	LD HL,1
	POP BC
	CALL runtimeCharAt
	CALL runtimePrintString
	CALL runtimePrintNewline
	LD A,(ZX_ATTR_P)
	LD (ZX_ATTR_T),A
	POP AF
	LD (ZX_P_FLAG),A
	CALL ZXFreeTempCompact
ZXBASIC_LINE_170:
; 170  LET oy=y: LET ox=x
	LD HL,170
	LD (23621),HL
; 		170.1  LET oy=y
	LD A,1
	LD (23623),a
	LD HL,(ZXBASIC_VAR_y)
	LD (ZXBASIC_VAR_oy),HL
; 		170.2  LET ox=x
	LD A,2
	LD (23623),a
	LD HL,(ZXBASIC_VAR_x)
	LD (ZXBASIC_VAR_ox),HL
ZXBASIC_LINE_180:
; 180  GOTO 80
	LD HL,180
	LD (23621),HL
; 		180.1  GOTO 80{00 00 50 00 00 }
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	JP ZXBASIC_LINE_80
ZXBASIC_LINE_190:
; 190  REM ==== LETTERS ====
	LD HL,190
	LD (23621),HL
	LD A,1
	LD (23623),a
ZXBASIC_LINE_200:
; 200  IF q<5 THEN  RETURN 
	LD HL,200
	LD (23621),HL
; 		200.1  IF q<5{00 00 05 00 00 } THEN  RETURN 
	LD A,1
	LD (23623),a
	LD DE,(ZXBASIC_VAR_q)
	LD HL,5
; <
	CALL runtimeCmpHLltDE
	LD A,L
	CP 0
	JP Z,ZXB_LABEL_6
; 		200.2  RETURN 
	LD A,2
	LD (23623),a
	CALL runtimeCheckBreak
	RET
ZXB_LABEL_6:
ZXBASIC_LINE_210:
; 210  LET s$= SCREEN (y,x)
	LD HL,210
	LD (23621),HL
; 		210.1  LET s$= SCREEN (y,x)
	LD A,1
	LD (23623),a
; SCREEN
	LD DE,(ZXBASIC_VAR_y)
	LD HL,(ZXBASIC_VAR_x)
	CALL runtimeScreen
	LD DE,HL
	LD HL,ZXBASIC_VAR_s_string
	CALL runtimeStoreString
ZXBASIC_LINE_220:
; 220  IF s$=a$(o,n) THEN  PRINT  AT 21,v;a$(o,n): FOR g=40 TO 50: BEEP .05,g: NEXT g: LET n=n+1: LET v=v+1: GOSUB wall
	LD HL,220
	LD (23621),HL
; 		220.1  IF s$=a$(o,n) THEN  PRINT  AT 21{00 00 15 00 00 },v;a$(o,n)
	LD A,1
	LD (23623),a
	LD HL,(ZXBASIC_VAR_s_string)
	PUSH HL
	LD HL,(ZXBASIC_VAR_o)
	LD DE,9
	CALL runtimeMult16bit
	LD DE,HL
	LD HL,ZXBASIC_VAR_a_string
	ADD HL,DE
	PUSH HL
	LD HL,(ZXBASIC_VAR_n)
	PUSH HL
	LD BC,HL
	POP DE
	POP HL
	CALL runtimePushFixedSubString
; =
	POP DE
	CALL runtimeEqualString
	LD A,L
	CP 0
	JP Z,ZXB_LABEL_7
; 		220.2  PRINT  AT 21{00 00 15 00 00 },v;a$(o,n)
	LD A,2
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,21
	LD HL,(ZXBASIC_VAR_v)
	CALL runtimePrintAt
	LD HL,(ZXBASIC_VAR_o)
	LD DE,9
	CALL runtimeMult16bit
	LD DE,HL
	LD HL,ZXBASIC_VAR_a_string
	ADD HL,DE
	PUSH HL
	LD HL,(ZXBASIC_VAR_n)
	PUSH HL
	LD BC,HL
	POP DE
	POP HL
	CALL runtimePushFixedSubString
	CALL runtimePrintString
	CALL runtimePrintNewline
	POP AF
	LD (ZX_P_FLAG),A
; 		220.3  FOR g=40{00 00 28 00 00 } TO 50{00 00 32 00 00 }
	LD A,3
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,40
	LD (ZXBASIC_VAR_g),HL
	LD HL,50
	LD (ZXBASIC_VAR_for_g),HL
FOR_1:
; 		220.4  BEEP .05{7c 4c cc cc cc },g
	LD A,4
	LD (23623),a
	LD HL,FLOAT_2	;.05
	CALL runtimePushFloatVar
	LD HL,(ZXBASIC_VAR_g)
	CALL runtimeIntToFloat
	CALL $03F8
; 		220.5  NEXT g
	LD A,5
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,(ZXBASIC_VAR_g)
	INC HL
	LD (ZXBASIC_VAR_g),HL
	LD DE,(ZXBASIC_VAR_for_g)
	EX HL,DE
	SUB HL,DE
	JP NC,FOR_1
; 		220.6  LET n=n+1{00 00 01 00 00 }
	LD A,6
	LD (23623),a
	LD HL,(ZXBASIC_VAR_n)
	INC HL
; +
	LD (ZXBASIC_VAR_n),HL
; 		220.7  LET v=v+1{00 00 01 00 00 }
	LD A,7
	LD (23623),a
	LD HL,(ZXBASIC_VAR_v)
	INC HL
; +
	LD (ZXBASIC_VAR_v),HL
; 		220.8  GOSUB wall
	LD A,8
	LD (23623),a
	CALL runtimeCheckBreak
	LD DE,(ZXBASIC_VAR_wall)
	LD HL,ZXLINES
	CALL runtimeFindLine
	CALL runtimeVarCall
ZXB_LABEL_7:
ZXBASIC_LINE_230:
; 230  IF n=9 THEN  LET v=v+1: LET o=o+1: LET n=1
	LD HL,230
	LD (23621),HL
; 		230.1  IF n=9{00 00 09 00 00 } THEN  LET v=v+1{00 00 01 00 00 }
	LD A,1
	LD (23623),a
	LD DE,(ZXBASIC_VAR_n)
	LD HL,9
; =
	CALL runtimeCmpHLEqDE
	LD A,L
	CP 0
	JP Z,ZXB_LABEL_8
; 		230.2  LET v=v+1{00 00 01 00 00 }
	LD A,2
	LD (23623),a
	LD HL,(ZXBASIC_VAR_v)
	INC HL
; +
	LD (ZXBASIC_VAR_v),HL
; 		230.3  LET o=o+1{00 00 01 00 00 }
	LD A,3
	LD (23623),a
	LD HL,(ZXBASIC_VAR_o)
	INC HL
; +
	LD (ZXBASIC_VAR_o),HL
; 		230.4  LET n=1{00 00 01 00 00 }
	LD A,4
	LD (23623),a
	LD HL,1
	LD (ZXBASIC_VAR_n),HL
ZXB_LABEL_8:
ZXBASIC_LINE_240:
; 240  IF q=5 THEN  PRINT  AT 1,15; INK 2;a$(o,n)
	LD HL,240
	LD (23621),HL
; 		240.1  IF q=5{00 00 05 00 00 } THEN  PRINT  AT 1{00 00 01 00 00 },15{00 00 0f 00 00 }; INK 2{00 00 02 00 00 };a$(o,n)
	LD A,1
	LD (23623),a
	LD DE,(ZXBASIC_VAR_q)
	LD HL,5
; =
	CALL runtimeCmpHLEqDE
	LD A,L
	CP 0
	JP Z,ZXB_LABEL_9
; 		240.2  PRINT  AT 1{00 00 01 00 00 },15{00 00 0f 00 00 }; INK 2{00 00 02 00 00 };a$(o,n)
	LD A,2
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,1
	LD HL,15
	CALL runtimePrintAt
	LD HL,2
	CALL runtimeLocalInk
	LD HL,(ZXBASIC_VAR_o)
	LD DE,9
	CALL runtimeMult16bit
	LD DE,HL
	LD HL,ZXBASIC_VAR_a_string
	ADD HL,DE
	PUSH HL
	LD HL,(ZXBASIC_VAR_n)
	PUSH HL
	LD BC,HL
	POP DE
	POP HL
	CALL runtimePushFixedSubString
	CALL runtimePrintString
	CALL runtimePrintNewline
	LD A,(ZX_ATTR_P)
	LD (ZX_ATTR_T),A
	POP AF
	LD (ZX_P_FLAG),A
ZXB_LABEL_9:
ZXBASIC_LINE_250:
; 250  RETURN 
	LD HL,250
	LD (23621),HL
; 		250.1  RETURN 
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	RET
ZXBASIC_LINE_260:
; 260  REM *** WALL GAPS ***
	LD HL,260
	LD (23621),HL
	LD A,1
	LD (23623),a
ZXBASIC_LINE_270:
; 270  IF o=2 AND n=6  THEN  GOTO 700
	LD HL,270
	LD (23621),HL
; 		270.1  IF o=2{00 00 02 00 00 } AND n=6 {00 00 06 00 00 } THEN  GOTO 700{00 00 bc 02 00 }
	LD A,1
	LD (23623),a
	LD DE,(ZXBASIC_VAR_o)
	LD HL,2
; =
	CALL runtimeCmpHLEqDE
	PUSH HL
	LD DE,(ZXBASIC_VAR_n)
	LD HL,6 
; =
	CALL runtimeCmpHLEqDE
; AND
	POP DE
	call runtimeAndHLDE
	LD A,L
	CP 0
	JP Z,ZXB_LABEL_10
; 		270.2  GOTO 700{00 00 bc 02 00 }
	LD A,2
	LD (23623),a
	CALL runtimeCheckBreak
	JP ZXBASIC_LINE_700
ZXB_LABEL_10:
ZXBASIC_LINE_280:
; 280  LET q=0: LET y=20: LET x=10
	LD HL,280
	LD (23621),HL
; 		280.1  LET q=0{00 00 00 00 00 }
	LD A,1
	LD (23623),a
	LD HL,0
	LD (ZXBASIC_VAR_q),HL
; 		280.2  LET y=20{00 00 14 00 00 }
	LD A,2
	LD (23623),a
	LD HL,20
	LD (ZXBASIC_VAR_y),HL
; 		280.3  LET x=10{00 00 0a 00 00 }
	LD A,3
	LD (23623),a
	LD HL,10
	LD (ZXBASIC_VAR_x),HL
ZXBASIC_LINE_290:
; 290  IF q=0 THEN  PRINT  AT 1,15;" "
	LD HL,290
	LD (23621),HL
; 		290.1  IF q=0{00 00 00 00 00 } THEN  PRINT  AT 1{00 00 01 00 00 },15{00 00 0f 00 00 };" "
	LD A,1
	LD (23623),a
	LD DE,(ZXBASIC_VAR_q)
	LD HL,0
; =
	CALL runtimeCmpHLEqDE
	LD A,L
	CP 0
	JP Z,ZXB_LABEL_11
; 		290.2  PRINT  AT 1{00 00 01 00 00 },15{00 00 0f 00 00 };" "
	LD A,2
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,1
	LD HL,15
	CALL runtimePrintAt
	LD HL,STRING_1	; 
	CALL runtimePrintString
	CALL runtimePrintNewline
	POP AF
	LD (ZX_P_FLAG),A
ZXB_LABEL_11:
ZXBASIC_LINE_300:
; 300  PRINT  AT 19,7; INK 0;"\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143"; AT 16,7; INK 0;"\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143"
	LD HL,300
	LD (23621),HL
; 		300.1  PRINT  AT 19{00 00 13 00 00 },7{00 00 07 00 00 }; INK 0{00 00 00 00 00 };"\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143"; AT 16{00 00 10 00 00 },7{00 00 07 00 00 }; INK 0{00 00 00 00 00 };"\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143"
	LD A,1
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,19
	LD HL,7
	CALL runtimePrintAt
	LD HL,0
	CALL runtimeLocalInk
	LD HL,STRING_2	;\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f
	CALL runtimePrintString
	LD DE,16
	LD HL,7
	CALL runtimePrintAt
	LD HL,0
	CALL runtimeLocalInk
	LD HL,STRING_2	;\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f
	CALL runtimePrintString
	CALL runtimePrintNewline
	LD A,(ZX_ATTR_P)
	LD (ZX_ATTR_T),A
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_310:
; 310  PRINT  AT 19, INT ( RND *16)+8;" "; AT 16, INT ( RND *10)+10;" "
	LD HL,310
	LD (23621),HL
; 		310.1  PRINT  AT 19{00 00 13 00 00 }, INT ( RND *16{00 00 10 00 00 })+8{00 00 08 00 00 };" "; AT 16{00 00 10 00 00 }, INT ( RND *10{00 00 0a 00 00 })+10{00 00 0a 00 00 };" "
	LD A,1
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,19
	PUSH HL
; INT
; RND
	CALL runtimeRND
	LD HL,16
; *
	CALL runtimeIntToFloat
	RST $28
	DB $04	;MULT
	DB $38	;END CALC
	CALL runtimeFloatToInt
	LD DE,HL
	LD HL,8
; +
	ADD HL,DE
	POP DE
	CALL runtimePrintAt
	LD HL,STRING_1	; 
	CALL runtimePrintString
	LD HL,16
	PUSH HL
; INT
; RND
	CALL runtimeRND
	LD HL,10
; *
	CALL runtimeIntToFloat
	RST $28
	DB $04	;MULT
	DB $38	;END CALC
	CALL runtimeFloatToInt
	LD DE,HL
	LD HL,10
; +
	ADD HL,DE
	POP DE
	CALL runtimePrintAt
	LD HL,STRING_1	; 
	CALL runtimePrintString
	CALL runtimePrintNewline
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_320:
; 320  PRINT  AT 3,7; INK 0;"\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143"; AT 5,7; INK 0;"\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143"
	LD HL,320
	LD (23621),HL
; 		320.1  PRINT  AT 3{00 00 03 00 00 },7{00 00 07 00 00 }; INK 0{00 00 00 00 00 };"\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143"; AT 5{00 00 05 00 00 },7{00 00 07 00 00 }; INK 0{00 00 00 00 00 };"\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143"
	LD A,1
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,3
	LD HL,7
	CALL runtimePrintAt
	LD HL,0
	CALL runtimeLocalInk
	LD HL,STRING_2	;\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f
	CALL runtimePrintString
	LD DE,5
	LD HL,7
	CALL runtimePrintAt
	LD HL,0
	CALL runtimeLocalInk
	LD HL,STRING_2	;\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f\8f
	CALL runtimePrintString
	CALL runtimePrintNewline
	LD A,(ZX_ATTR_P)
	LD (ZX_ATTR_T),A
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_330:
; 330  PRINT  AT 3, INT ( RND *10)+10;" "; AT 5, INT ( RND *16)+8;" "
	LD HL,330
	LD (23621),HL
; 		330.1  PRINT  AT 3{00 00 03 00 00 }, INT ( RND *10{00 00 0a 00 00 })+10{00 00 0a 00 00 };" "; AT 5{00 00 05 00 00 }, INT ( RND *16{00 00 10 00 00 })+8{00 00 08 00 00 };" "
	LD A,1
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,3
	PUSH HL
; INT
; RND
	CALL runtimeRND
	LD HL,10
; *
	CALL runtimeIntToFloat
	RST $28
	DB $04	;MULT
	DB $38	;END CALC
	CALL runtimeFloatToInt
	LD DE,HL
	LD HL,10
; +
	ADD HL,DE
	POP DE
	CALL runtimePrintAt
	LD HL,STRING_1	; 
	CALL runtimePrintString
	LD HL,5
	PUSH HL
; INT
; RND
	CALL runtimeRND
	LD HL,16
; *
	CALL runtimeIntToFloat
	RST $28
	DB $04	;MULT
	DB $38	;END CALC
	CALL runtimeFloatToInt
	LD DE,HL
	LD HL,8
; +
	ADD HL,DE
	POP DE
	CALL runtimePrintAt
	LD HL,STRING_1	; 
	CALL runtimePrintString
	CALL runtimePrintNewline
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_340:
; 340  BEEP .001,10: BEEP .002,20
	LD HL,340
	LD (23621),HL
; 		340.1  BEEP .001{77 03 12 6e 97 },10{00 00 0a 00 00 }
	LD A,1
	LD (23623),a
	LD HL,FLOAT_3	;.001
	CALL runtimePushFloatVar
	LD HL,10
	CALL runtimeIntToFloat
	CALL $03F8
; 		340.2  BEEP .002{78 03 12 6e 97 },20{00 00 14 00 00 }
	LD A,2
	LD (23623),a
	LD HL,FLOAT_4	;.002
	CALL runtimePushFloatVar
	LD HL,20
	CALL runtimeIntToFloat
	CALL $03F8
ZXBASIC_LINE_350:
; 350  PRINT  AT 16,4; INK 1;lf
	LD HL,350
	LD (23621),HL
; 		350.1  PRINT  AT 16{00 00 10 00 00 },4{00 00 04 00 00 }; INK 1{00 00 01 00 00 };lf
	LD A,1
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,16
	LD HL,4
	CALL runtimePrintAt
	LD HL,1
	CALL runtimeLocalInk
	LD HL,(ZXBASIC_VAR_lf)
	CALL runtimePrintInt
	CALL runtimePrintNewline
	LD A,(ZX_ATTR_P)
	LD (ZX_ATTR_T),A
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_360:
; 360  IF lf=0 THEN  PRINT  AT 16,2; INK 2; PAPER 7;"\150": FOR r=1 TO 2: FOR g=60 TO 10 STEP -1: BEEP 0.004,5+g: PRINT  AT 10,12; INK 2; FLASH 1;"GAME OVER"; FLASH 0: NEXT g: NEXT r: CLS : GOTO 20
	LD HL,360
	LD (23621),HL
; 		360.1  IF lf=0{00 00 00 00 00 } THEN  PRINT  AT 16{00 00 10 00 00 },2{00 00 02 00 00 }; INK 2{00 00 02 00 00 }; PAPER 7{00 00 07 00 00 };"\150"
	LD A,1
	LD (23623),a
	LD DE,(ZXBASIC_VAR_lf)
	LD HL,0
; =
	CALL runtimeCmpHLEqDE
	LD A,L
	CP 0
	JP Z,ZXB_LABEL_12
; 		360.2  PRINT  AT 16{00 00 10 00 00 },2{00 00 02 00 00 }; INK 2{00 00 02 00 00 }; PAPER 7{00 00 07 00 00 };"\150"
	LD A,2
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,16
	LD HL,2
	CALL runtimePrintAt
	LD HL,2
	CALL runtimeLocalInk
	LD HL,7
	CALL runtimeLocalPaper
	LD HL,STRING_3	;\96
	CALL runtimePrintString
	CALL runtimePrintNewline
	LD A,(ZX_ATTR_P)
	LD (ZX_ATTR_T),A
	POP AF
	LD (ZX_P_FLAG),A
; 		360.3  FOR r=1{00 00 01 00 00 } TO 2{00 00 02 00 00 }
	LD A,3
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,1
	LD (ZXBASIC_VAR_r),HL
	LD HL,2
	LD (ZXBASIC_VAR_for_r),HL
FOR_2:
; 		360.4  FOR g=60{00 00 3c 00 00 } TO 10{00 00 0a 00 00 } STEP -1{00 00 01 00 00 }
	LD A,4
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,60
	LD (ZXBASIC_VAR_g),HL
	LD HL,10
	LD (ZXBASIC_VAR_for_g),HL
	LD HL,1
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	LD (ZXBASIC_VAR_for_g_step),HL
FOR_3:
; 		360.5  BEEP 0.004{79 03 12 6e 97 },5{00 00 05 00 00 }+g
	LD A,5
	LD (23623),a
	LD HL,FLOAT_5	;0.004
	CALL runtimePushFloatVar
	LD DE,5
	LD HL,(ZXBASIC_VAR_g)
; +
	ADD HL,DE
	CALL runtimeIntToFloat
	CALL $03F8
; 		360.6  PRINT  AT 10{00 00 0a 00 00 },12{00 00 0c 00 00 }; INK 2{00 00 02 00 00 }; FLASH 1{00 00 01 00 00 };"GAME OVER"; FLASH 0{00 00 00 00 00 }
	LD A,6
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,10
	LD HL,12
	CALL runtimePrintAt
	LD HL,2
	CALL runtimeLocalInk
	LD HL,1
	CALL runtimeLocalFlash
	LD HL,STRING_4	;GAME OVER
	CALL runtimePrintString
	LD HL,0
	CALL runtimeLocalFlash
	LD A,(ZX_ATTR_P)
	LD (ZX_ATTR_T),A
	POP AF
	LD (ZX_P_FLAG),A
; 		360.7  NEXT g
	LD A,7
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,(ZXBASIC_VAR_g)
	LD BC,(ZXBASIC_VAR_for_g_step)
	LD A,B
	ADD HL,BC
	LD (ZXBASIC_VAR_g),HL
	LD DE,(ZXBASIC_VAR_for_g)
	AND $80
	JR Z,FOR_3_1
	SUB HL,DE
	JP Z,FOR_3_2
	JP NC,FOR_3
	JR FOR_3_2
FOR_3_1:
	EX HL,DE
	SUB HL,DE
	JP NC,FOR_3
FOR_3_2:
; 		360.8  NEXT r
	LD A,8
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,(ZXBASIC_VAR_r)
	INC HL
	LD (ZXBASIC_VAR_r),HL
	LD DE,(ZXBASIC_VAR_for_r)
	EX HL,DE
	SUB HL,DE
	JP NC,FOR_2
; 		360.9  CLS 
	LD A,9
	LD (23623),a
	CALL runtimeCls
; 		360.10  GOTO 20{00 00 14 00 00 }
	LD A,10
	LD (23623),a
	CALL runtimeCheckBreak
	JP ZXBASIC_LINE_20
ZXB_LABEL_12:
ZXBASIC_LINE_370:
; 370  PRINT  AT 18,24; FLASH 1; INK 7;"\144"; AT 14,7; INK 7;"\144"; AT 12,24; INK 7;"\144"; AT 8,7; INK 7;"\144"; AT 4,24; INK 7;"\144"
	LD HL,370
	LD (23621),HL
; 		370.1  PRINT  AT 18{00 00 12 00 00 },24{00 00 18 00 00 }; FLASH 1{00 00 01 00 00 }; INK 7{00 00 07 00 00 };"\144"; AT 14{00 00 0e 00 00 },7{00 00 07 00 00 }; INK 7{00 00 07 00 00 };"\144"; AT 12{00 00 0c 00 00 },24{00 00 18 00 00 }; INK 7{00 00 07 00 00 };"\144"; AT 8{00 00 08 00 00 },7{00 00 07 00 00 }; INK 7{00 00 07 00 00 };"\144"; AT 4{00 00 04 00 00 },24{00 00 18 00 00 }; INK 7{00 00 07 00 00 };"\144"
	LD A,1
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,18
	LD HL,24
	CALL runtimePrintAt
	LD HL,1
	CALL runtimeLocalFlash
	LD HL,7
	CALL runtimeLocalInk
	LD HL,STRING_5	;\90
	CALL runtimePrintString
	LD DE,14
	LD HL,7
	CALL runtimePrintAt
	LD HL,7
	CALL runtimeLocalInk
	LD HL,STRING_5	;\90
	CALL runtimePrintString
	LD DE,12
	LD HL,24
	CALL runtimePrintAt
	LD HL,7
	CALL runtimeLocalInk
	LD HL,STRING_5	;\90
	CALL runtimePrintString
	LD DE,8
	LD HL,7
	CALL runtimePrintAt
	LD HL,7
	CALL runtimeLocalInk
	LD HL,STRING_5	;\90
	CALL runtimePrintString
	LD DE,4
	LD HL,24
	CALL runtimePrintAt
	LD HL,7
	CALL runtimeLocalInk
	LD HL,STRING_5	;\90
	CALL runtimePrintString
	CALL runtimePrintNewline
	LD A,(ZX_ATTR_P)
	LD (ZX_ATTR_T),A
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_380:
; 380  RETURN 
	LD HL,380
	LD (23621),HL
; 		380.1  RETURN 
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	RET
ZXBASIC_LINE_390:
; 390  LET h=h+j
	LD HL,390
	LD (23621),HL
; 		390.1  LET h=h+j
	LD A,1
	LD (23623),a
	LD DE,(ZXBASIC_VAR_h)
	LD HL,(ZXBASIC_VAR_j)
; +
	ADD HL,DE
	LD (ZXBASIC_VAR_h),HL
ZXBASIC_LINE_400:
; 400  LET p=p-i
	LD HL,400
	LD (23621),HL
; 		400.1  LET p=p-i
	LD A,1
	LD (23623),a
	LD HL,(ZXBASIC_VAR_p)
	LD DE,(ZXBASIC_VAR_i)
; -
	SUB HL,DE
	LD (ZXBASIC_VAR_p),HL
ZXBASIC_LINE_410:
; 410  PRINT  AT 7,h; INK 3;" \144\145"; INK 0; CHR$ 143
	LD HL,410
	LD (23621),HL
; 		410.1  PRINT  AT 7{00 00 07 00 00 },h; INK 3{00 00 03 00 00 };" \144\145"; INK 0{00 00 00 00 00 }; CHR$ 143{00 00 8f 00 00 }
	LD A,1
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,7
	LD HL,(ZXBASIC_VAR_h)
	CALL runtimePrintAt
	LD HL,3
	CALL runtimeLocalInk
	LD HL,STRING_6	; \90\91
	CALL runtimePrintString
	LD HL,0
	CALL runtimeLocalInk
; CHR$
	LD HL,143
	CALL runtimeChr
	CALL runtimePrintString
	CALL runtimePrintNewline
	LD A,(ZX_ATTR_P)
	LD (ZX_ATTR_T),A
	POP AF
	LD (ZX_P_FLAG),A
	CALL ZXFreeTempCompact
ZXBASIC_LINE_420:
; 420  PRINT  AT 10,p; INK 0; CHR$ 143; INK 3;"\145\144 "
	LD HL,420
	LD (23621),HL
; 		420.1  PRINT  AT 10{00 00 0a 00 00 },p; INK 0{00 00 00 00 00 }; CHR$ 143{00 00 8f 00 00 }; INK 3{00 00 03 00 00 };"\145\144 "
	LD A,1
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,10
	LD HL,(ZXBASIC_VAR_p)
	CALL runtimePrintAt
	LD HL,0
	CALL runtimeLocalInk
; CHR$
	LD HL,143
	CALL runtimeChr
	CALL runtimePrintString
	LD HL,3
	CALL runtimeLocalInk
	LD HL,STRING_7	;\91\90 
	CALL runtimePrintString
	CALL runtimePrintNewline
	LD A,(ZX_ATTR_P)
	LD (ZX_ATTR_T),A
	POP AF
	LD (ZX_P_FLAG),A
	CALL ZXFreeTempCompact
ZXBASIC_LINE_430:
; 430  PRINT  AT 13,h; INK 3;" \144\145"; INK 0; CHR$ 143
	LD HL,430
	LD (23621),HL
; 		430.1  PRINT  AT 13{00 00 0d 00 00 },h; INK 3{00 00 03 00 00 };" \144\145"; INK 0{00 00 00 00 00 }; CHR$ 143{00 00 8f 00 00 }
	LD A,1
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,13
	LD HL,(ZXBASIC_VAR_h)
	CALL runtimePrintAt
	LD HL,3
	CALL runtimeLocalInk
	LD HL,STRING_6	; \90\91
	CALL runtimePrintString
	LD HL,0
	CALL runtimeLocalInk
; CHR$
	LD HL,143
	CALL runtimeChr
	CALL runtimePrintString
	CALL runtimePrintNewline
	LD A,(ZX_ATTR_P)
	LD (ZX_ATTR_T),A
	POP AF
	LD (ZX_P_FLAG),A
	CALL ZXFreeTempCompact
ZXBASIC_LINE_440:
; 440  LET j=j+(h<14)-(h>18)
	LD HL,440
	LD (23621),HL
; 		440.1  LET j=j+(h<14{00 00 0e 00 00 })-(h>18{00 00 12 00 00 })
	LD A,1
	LD (23623),a
	LD HL,(ZXBASIC_VAR_j)
	PUSH HL
; (
	LD DE,(ZXBASIC_VAR_h)
	LD HL,14
; <
	CALL runtimeCmpHLltDE
; )
; +
	POP DE
	ADD HL,DE
	PUSH HL
; (
	LD DE,(ZXBASIC_VAR_h)
	LD HL,18
; >
	CALL runtimeCmpHlGtDE
; )
; -
	POP DE
	EX HL,DE
	SUB HL,DE
	LD (ZXBASIC_VAR_j),HL
ZXBASIC_LINE_450:
; 450  LET i=i+(p>12)-(p<8)
	LD HL,450
	LD (23621),HL
; 		450.1  LET i=i+(p>12{00 00 0c 00 00 })-(p<8{00 00 08 00 00 })
	LD A,1
	LD (23623),a
	LD HL,(ZXBASIC_VAR_i)
	PUSH HL
; (
	LD DE,(ZXBASIC_VAR_p)
	LD HL,12
; >
	CALL runtimeCmpHlGtDE
; )
; +
	POP DE
	ADD HL,DE
	PUSH HL
; (
	LD DE,(ZXBASIC_VAR_p)
	LD HL,8
; <
	CALL runtimeCmpHLltDE
; )
; -
	POP DE
	EX HL,DE
	SUB HL,DE
	LD (ZXBASIC_VAR_i),HL
ZXBASIC_LINE_460:
; 460  PRINT  AT 10,p+7;" "; INK 3;"\144\145"; INK 0; CHR$ 143
	LD HL,460
	LD (23621),HL
; 		460.1  PRINT  AT 10{00 00 0a 00 00 },p+7{00 00 07 00 00 };" "; INK 3{00 00 03 00 00 };"\144\145"; INK 0{00 00 00 00 00 }; CHR$ 143{00 00 8f 00 00 }
	LD A,1
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,10
	PUSH HL
	LD DE,(ZXBASIC_VAR_p)
	LD HL,7
; +
	ADD HL,DE
	POP DE
	CALL runtimePrintAt
	LD HL,STRING_1	; 
	CALL runtimePrintString
	LD HL,3
	CALL runtimeLocalInk
	LD HL,STRING_8	;\90\91
	CALL runtimePrintString
	LD HL,0
	CALL runtimeLocalInk
; CHR$
	LD HL,143
	CALL runtimeChr
	CALL runtimePrintString
	CALL runtimePrintNewline
	LD A,(ZX_ATTR_P)
	LD (ZX_ATTR_T),A
	POP AF
	LD (ZX_P_FLAG),A
	CALL ZXFreeTempCompact
ZXBASIC_LINE_470:
; 470  LET a=a+b: LET d=d-e
	LD HL,470
	LD (23621),HL
; 		470.1  LET a=a+b
	LD A,1
	LD (23623),a
	LD DE,(ZXBASIC_VAR_a)
	LD HL,(ZXBASIC_VAR_b)
; +
	ADD HL,DE
	LD (ZXBASIC_VAR_a),HL
; 		470.2  LET d=d-e
	LD A,2
	LD (23623),a
	LD HL,(ZXBASIC_VAR_d)
	LD DE,(ZXBASIC_VAR_e)
; -
	SUB HL,DE
	LD (ZXBASIC_VAR_d),HL
ZXBASIC_LINE_480:
; 480  LET b=b+(a<8)-(a>17)
	LD HL,480
	LD (23621),HL
; 		480.1  LET b=b+(a<8{00 00 08 00 00 })-(a>17{00 00 11 00 00 })
	LD A,1
	LD (23623),a
	LD HL,(ZXBASIC_VAR_b)
	PUSH HL
; (
	LD DE,(ZXBASIC_VAR_a)
	LD HL,8
; <
	CALL runtimeCmpHLltDE
; )
; +
	POP DE
	ADD HL,DE
	PUSH HL
; (
	LD DE,(ZXBASIC_VAR_a)
	LD HL,17
; >
	CALL runtimeCmpHlGtDE
; )
; -
	POP DE
	EX HL,DE
	SUB HL,DE
	LD (ZXBASIC_VAR_b),HL
ZXBASIC_LINE_490:
; 490  LET e=e+(d>17)-(d<8)
	LD HL,490
	LD (23621),HL
; 		490.1  LET e=e+(d>17{00 00 11 00 00 })-(d<8{00 00 08 00 00 })
	LD A,1
	LD (23623),a
	LD HL,(ZXBASIC_VAR_e)
	PUSH HL
; (
	LD DE,(ZXBASIC_VAR_d)
	LD HL,17
; >
	CALL runtimeCmpHlGtDE
; )
; +
	POP DE
	ADD HL,DE
	PUSH HL
; (
	LD DE,(ZXBASIC_VAR_d)
	LD HL,8
; <
	CALL runtimeCmpHLltDE
; )
; -
	POP DE
	EX HL,DE
	SUB HL,DE
	LD (ZXBASIC_VAR_e),HL
ZXBASIC_LINE_500:
; 500  PRINT  AT c+1,a;" \144\145\150\145\144 "
	LD HL,500
	LD (23621),HL
; 		500.1  PRINT  AT c+1{00 00 01 00 00 },a;" \144\145\150\145\144 "
	LD A,1
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,(ZXBASIC_VAR_c)
	LD HL,1
; +
	ADD HL,DE
	LD DE,HL
	LD HL,(ZXBASIC_VAR_a)
	CALL runtimePrintAt
	LD HL,STRING_9	; \90\91\96\91\90 
	CALL runtimePrintString
	CALL runtimePrintNewline
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_510:
; 510  PRINT  AT c+6,a;" \144\145\150\145\144 "
	LD HL,510
	LD (23621),HL
; 		510.1  PRINT  AT c+6{00 00 06 00 00 },a;" \144\145\150\145\144 "
	LD A,1
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,(ZXBASIC_VAR_c)
	LD HL,6
; +
	ADD HL,DE
	LD DE,HL
	LD HL,(ZXBASIC_VAR_a)
	CALL runtimePrintAt
	LD HL,STRING_9	; \90\91\96\91\90 
	CALL runtimePrintString
	CALL runtimePrintNewline
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_520:
; 520  PRINT  AT c+12,a;" \144\145\150\145\144 "
	LD HL,520
	LD (23621),HL
; 		520.1  PRINT  AT c+12{00 00 0c 00 00 },a;" \144\145\150\145\144 "
	LD A,1
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,(ZXBASIC_VAR_c)
	LD HL,12
; +
	ADD HL,DE
	LD DE,HL
	LD HL,(ZXBASIC_VAR_a)
	CALL runtimePrintAt
	LD HL,STRING_9	; \90\91\96\91\90 
	CALL runtimePrintString
	CALL runtimePrintNewline
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_530:
; 530  PRINT  AT f,d;" \144\145\150\145\144 "
	LD HL,530
	LD (23621),HL
; 		530.1  PRINT  AT f,d;" \144\145\150\145\144 "
	LD A,1
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,(ZXBASIC_VAR_f)
	LD HL,(ZXBASIC_VAR_d)
	CALL runtimePrintAt
	LD HL,STRING_9	; \90\91\96\91\90 
	CALL runtimePrintString
	CALL runtimePrintNewline
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_540:
; 540  PRINT  AT f+7,d;" \144\145\150\145\144 "
	LD HL,540
	LD (23621),HL
; 		540.1  PRINT  AT f+7{00 00 07 00 00 },d;" \144\145\150\145\144 "
	LD A,1
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,(ZXBASIC_VAR_f)
	LD HL,7
; +
	ADD HL,DE
	LD DE,HL
	LD HL,(ZXBASIC_VAR_d)
	CALL runtimePrintAt
	LD HL,STRING_9	; \90\91\96\91\90 
	CALL runtimePrintString
	CALL runtimePrintNewline
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_550:
; 550  PRINT  AT f+13,d;" \144\145\150\145\144 "
	LD HL,550
	LD (23621),HL
; 		550.1  PRINT  AT f+13{00 00 0d 00 00 },d;" \144\145\150\145\144 "
	LD A,1
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,(ZXBASIC_VAR_f)
	LD HL,13
; +
	ADD HL,DE
	LD DE,HL
	LD HL,(ZXBASIC_VAR_d)
	CALL runtimePrintAt
	LD HL,STRING_9	; \90\91\96\91\90 
	CALL runtimePrintString
	CALL runtimePrintNewline
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_560:
; 560  IF  ATTR (y,x)=43 THEN  FOR t=50 TO 45 STEP -1: FOR w=1 TO 5: GOSUB 1000: PRINT  AT y,x; INK w;g$(w): BEEP 0.004,5+t: NEXT w: NEXT t: LET lf=lf-1: GOSUB wall
	LD HL,560
	LD (23621),HL
; 		560.1  IF  ATTR (y,x)=43{00 00 2b 00 00 } THEN  FOR t=50{00 00 32 00 00 } TO 45{00 00 2d 00 00 } STEP -1{00 00 01 00 00 }
	LD A,1
	LD (23623),a
; ATTR
	LD DE,(ZXBASIC_VAR_y)
	LD HL,(ZXBASIC_VAR_x)
	CALL runtimeAttr
	LD DE,HL
	LD HL,43
; =
	CALL runtimeCmpHLEqDE
	LD A,L
	CP 0
	JP Z,ZXB_LABEL_13
; 		560.2  FOR t=50{00 00 32 00 00 } TO 45{00 00 2d 00 00 } STEP -1{00 00 01 00 00 }
	LD A,2
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,50
	LD (ZXBASIC_VAR_t),HL
	LD HL,45
	LD (ZXBASIC_VAR_for_t),HL
	LD HL,1
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	LD (ZXBASIC_VAR_for_t_step),HL
FOR_4:
; 		560.3  FOR w=1{00 00 01 00 00 } TO 5{00 00 05 00 00 }
	LD A,3
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,1
	LD (ZXBASIC_VAR_w),HL
	LD HL,5
	LD (ZXBASIC_VAR_for_w),HL
FOR_5:
; 		560.4  GOSUB 1000{00 00 e8 03 00 }
	LD A,4
	LD (23623),a
	CALL runtimeCheckBreak
	CALL ZXBASIC_LINE_1000
; 		560.5  PRINT  AT y,x; INK w;g$(w)
	LD A,5
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,(ZXBASIC_VAR_y)
	LD HL,(ZXBASIC_VAR_x)
	CALL runtimePrintAt
	LD HL,(ZXBASIC_VAR_w)
	CALL runtimeLocalInk
	LD HL,(ZXBASIC_VAR_g_string)
	PUSH HL
	LD HL,(ZXBASIC_VAR_w)
	POP BC
	CALL runtimeCharAt
	CALL runtimePrintString
	CALL runtimePrintNewline
	LD A,(ZX_ATTR_P)
	LD (ZX_ATTR_T),A
	POP AF
	LD (ZX_P_FLAG),A
	CALL ZXFreeTempCompact
; 		560.6  BEEP 0.004{79 03 12 6e 97 },5{00 00 05 00 00 }+t
	LD A,6
	LD (23623),a
	LD HL,FLOAT_5	;0.004
	CALL runtimePushFloatVar
	LD DE,5
	LD HL,(ZXBASIC_VAR_t)
; +
	ADD HL,DE
	CALL runtimeIntToFloat
	CALL $03F8
; 		560.7  NEXT w
	LD A,7
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,(ZXBASIC_VAR_w)
	INC HL
	LD (ZXBASIC_VAR_w),HL
	LD DE,(ZXBASIC_VAR_for_w)
	EX HL,DE
	SUB HL,DE
	JP NC,FOR_5
; 		560.8  NEXT t
	LD A,8
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,(ZXBASIC_VAR_t)
	LD BC,(ZXBASIC_VAR_for_t_step)
	LD A,B
	ADD HL,BC
	LD (ZXBASIC_VAR_t),HL
	LD DE,(ZXBASIC_VAR_for_t)
	AND $80
	JR Z,FOR_4_1
	SUB HL,DE
	JP Z,FOR_4_2
	JP NC,FOR_4
	JR FOR_4_2
FOR_4_1:
	EX HL,DE
	SUB HL,DE
	JP NC,FOR_4
FOR_4_2:
; 		560.9  LET lf=lf-1{00 00 01 00 00 }
	LD A,9
	LD (23623),a
	LD HL,(ZXBASIC_VAR_lf)
	DEC HL
; -
	LD (ZXBASIC_VAR_lf),HL
; 		560.10  GOSUB wall
	LD A,10
	LD (23623),a
	CALL runtimeCheckBreak
	LD DE,(ZXBASIC_VAR_wall)
	LD HL,ZXLINES
	CALL runtimeFindLine
	CALL runtimeVarCall
ZXB_LABEL_13:
ZXBASIC_LINE_580:
; 580  RETURN 
	LD HL,580
	LD (23621),HL
; 		580.1  RETURN 
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	RET
ZXBASIC_LINE_590:
; 590  REM === START UP INTRO ===
	LD HL,590
	LD (23621),HL
	LD A,1
	LD (23623),a
ZXBASIC_LINE_591:
; 591  LET r=0
	LD HL,591
	LD (23621),HL
; 		591.1  LET r=0{00 00 00 00 00 }
	LD A,1
	LD (23623),a
	LD HL,0
	LD (ZXBASIC_VAR_r),HL
ZXBASIC_LINE_600:
; 600  PAPER 5: BORDER 5: INK 0: CLS : PAPER 5:
	LD HL,600
	LD (23621),HL
; 		600.1  PAPER 5{00 00 05 00 00 }
	LD A,1
	LD (23623),a
	LD HL,5
	CALL runtimePaper
; 		600.2  BORDER 5{00 00 05 00 00 }
	LD A,2
	LD (23623),a
	LD HL,5
	LD A,L
	call $2297
; 		600.3  INK 0{00 00 00 00 00 }
	LD A,3
	LD (23623),a
	LD HL,0
	CALL runtimeInk
; 		600.4  CLS 
	LD A,4
	LD (23623),a
	CALL runtimeCls
; 		600.5  PAPER 5{00 00 05 00 00 }
	LD A,5
	LD (23623),a
	LD HL,5
	CALL runtimePaper
ZXBASIC_LINE_610:
; 610  INK 3: PLOT 0,0: DRAW 255,0: DRAW 0,175: DRAW -255,0: DRAW 0,-175: PLOT 6,6: DRAW 242,0: DRAW 0,162: DRAW -242,0: DRAW 0,-162
	LD HL,610
	LD (23621),HL
; 		610.1  INK 3{00 00 03 00 00 }
	LD A,1
	LD (23623),a
	LD HL,3
	CALL runtimeInk
; 		610.2  PLOT 0{00 00 00 00 00 },0{00 00 00 00 00 }
	LD A,2
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,0
	LD HL,0
	CALL runtimePlot
	POP AF
	LD (ZX_P_FLAG),A
; 		610.3  DRAW 255{00 00 ff 00 00 },0{00 00 00 00 00 }
	LD A,3
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,255
	LD HL,0
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		610.4  DRAW 0{00 00 00 00 00 },175{00 00 af 00 00 }
	LD A,4
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,0
	LD HL,175
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		610.5  DRAW -255{00 00 ff 00 00 },0{00 00 00 00 00 }
	LD A,5
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,255
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	LD DE,HL
	LD HL,0
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		610.6  DRAW 0{00 00 00 00 00 },-175{00 00 af 00 00 }
	LD A,6
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,0
	PUSH HL
	LD HL,175
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	POP DE
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		610.7  PLOT 6{00 00 06 00 00 },6{00 00 06 00 00 }
	LD A,7
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,6
	LD HL,6
	CALL runtimePlot
	POP AF
	LD (ZX_P_FLAG),A
; 		610.8  DRAW 242{00 00 f2 00 00 },0{00 00 00 00 00 }
	LD A,8
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,242
	LD HL,0
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		610.9  DRAW 0{00 00 00 00 00 },162{00 00 a2 00 00 }
	LD A,9
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,0
	LD HL,162
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		610.10  DRAW -242{00 00 f2 00 00 },0{00 00 00 00 00 }
	LD A,10
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,242
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	LD DE,HL
	LD HL,0
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		610.11  DRAW 0{00 00 00 00 00 },-162{00 00 a2 00 00 }
	LD A,11
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,0
	PUSH HL
	LD HL,162
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	POP DE
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_615:
; 615  GOSUB 1090
	LD HL,615
	LD (23621),HL
; 		615.1  GOSUB 1090{00 00 42 04 00 }
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	CALL ZXBASIC_LINE_1090
ZXBASIC_LINE_620:
; 620  REM !! LINE 630 48K ONLY !! 
	LD HL,620
	LD (23621),HL
	LD A,1
	LD (23623),a
ZXBASIC_LINE_630:
; 630  FOR a=0 TO 7: INK 0: POKE 23680,3: POKE 23681,72+a: LPRINT "S I N C L A I R  B A S I C": NEXT a
	LD HL,630
	LD (23621),HL
; 		630.1  FOR a=0{00 00 00 00 00 } TO 7{00 00 07 00 00 }
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,0
	LD (ZXBASIC_VAR_a),HL
	LD HL,7
	LD (ZXBASIC_VAR_for_a),HL
FOR_6:
; 		630.2  INK 0{00 00 00 00 00 }
	LD A,2
	LD (23623),a
	LD HL,0
	CALL runtimeInk
; 		630.3  POKE 23680{00 00 80 5c 00 },3{00 00 03 00 00 }
	LD A,3
	LD (23623),a
	LD HL,23680
	LD DE,3
	LD (HL),E
; 		630.4  POKE 23681{00 00 81 5c 00 },72{00 00 48 00 00 }+a
	LD A,4
	LD (23623),a
	LD HL,23681
	PUSH HL
	LD DE,72
	LD HL,(ZXBASIC_VAR_a)
; +
	ADD HL,DE
	POP DE
	EX HL,DE
	LD (HL),E
; 		630.5  LPRINT "S I N C L A I R  B A S I C"
	LD A,5
	LD (23623),a
	LD A,3
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,STRING_10	;S I N C L A I R  B A S I C
	CALL runtimePrintString
	CALL runtimePrintNewline
	POP AF
	LD (ZX_P_FLAG),A
; 		630.6  NEXT a
	LD A,6
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,(ZXBASIC_VAR_a)
	INC HL
	LD (ZXBASIC_VAR_a),HL
	LD DE,(ZXBASIC_VAR_for_a)
	EX HL,DE
	SUB HL,DE
	JP NC,FOR_6
ZXBASIC_LINE_640:
; 640  PRINT  AT 16,7; INK 2;"Retrieve it back"; AT 17,6;"collect the letters"
	LD HL,640
	LD (23621),HL
; 		640.1  PRINT  AT 16{00 00 10 00 00 },7{00 00 07 00 00 }; INK 2{00 00 02 00 00 };"Retrieve it back"; AT 17{00 00 11 00 00 },6{00 00 06 00 00 };"collect the letters"
	LD A,1
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,16
	LD HL,7
	CALL runtimePrintAt
	LD HL,2
	CALL runtimeLocalInk
	LD HL,STRING_11	;Retrieve it back
	CALL runtimePrintString
	LD DE,17
	LD HL,6
	CALL runtimePrintAt
	LD HL,STRING_12	;collect the letters
	CALL runtimePrintString
	CALL runtimePrintNewline
	LD A,(ZX_ATTR_P)
	LD (ZX_ATTR_T),A
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_650:
; 650  PRINT  AT 19,6; INK 7; FLASH 1;"\144"; FLASH 0; INK 3;"1=KEYS "; INK 7; FLASH 1;"\144"; FLASH 0; INK 3;"2=KEMPSTON"
	LD HL,650
	LD (23621),HL
; 		650.1  PRINT  AT 19{00 00 13 00 00 },6{00 00 06 00 00 }; INK 7{00 00 07 00 00 }; FLASH 1{00 00 01 00 00 };"\144"; FLASH 0{00 00 00 00 00 }; INK 3{00 00 03 00 00 };"1=KEYS "; INK 7{00 00 07 00 00 }; FLASH 1{00 00 01 00 00 };"\144"; FLASH 0{00 00 00 00 00 }; INK 3{00 00 03 00 00 };"2=KEMPSTON"
	LD A,1
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,19
	LD HL,6
	CALL runtimePrintAt
	LD HL,7
	CALL runtimeLocalInk
	LD HL,1
	CALL runtimeLocalFlash
	LD HL,STRING_5	;\90
	CALL runtimePrintString
	LD HL,0
	CALL runtimeLocalFlash
	LD HL,3
	CALL runtimeLocalInk
	LD HL,STRING_13	;1=KEYS 
	CALL runtimePrintString
	LD HL,7
	CALL runtimeLocalInk
	LD HL,1
	CALL runtimeLocalFlash
	LD HL,STRING_5	;\90
	CALL runtimePrintString
	LD HL,0
	CALL runtimeLocalFlash
	LD HL,3
	CALL runtimeLocalInk
	LD HL,STRING_14	;2=KEMPSTON
	CALL runtimePrintString
	CALL runtimePrintNewline
	LD A,(ZX_ATTR_P)
	LD (ZX_ATTR_T),A
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_660:
; 660  PRINT  AT 5,7; INK 2;"The EVIL BOX HEADS"; INK 2; AT 6,4;"have stolen The Spectrum"; INK 2; AT 7,6;"programming language";
	LD HL,660
	LD (23621),HL
; 		660.1  PRINT  AT 5{00 00 05 00 00 },7{00 00 07 00 00 }; INK 2{00 00 02 00 00 };"The EVIL BOX HEADS"; INK 2{00 00 02 00 00 }; AT 6{00 00 06 00 00 },4{00 00 04 00 00 };"have stolen The Spectrum"; INK 2{00 00 02 00 00 }; AT 7{00 00 07 00 00 },6{00 00 06 00 00 };"programming language";
	LD A,1
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,5
	LD HL,7
	CALL runtimePrintAt
	LD HL,2
	CALL runtimeLocalInk
	LD HL,STRING_15	;The EVIL BOX HEADS
	CALL runtimePrintString
	LD HL,2
	CALL runtimeLocalInk
	LD DE,6
	LD HL,4
	CALL runtimePrintAt
	LD HL,STRING_16	;have stolen The Spectrum
	CALL runtimePrintString
	LD HL,2
	CALL runtimeLocalInk
	LD DE,7
	LD HL,6
	CALL runtimePrintAt
	LD HL,STRING_17	;programming language
	CALL runtimePrintString
	LD A,(ZX_ATTR_P)
	LD (ZX_ATTR_T),A
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_670:
; 670  PRINT #1; TAB 7;"by Animated ALex"
	LD HL,670
	LD (23621),HL
; 		670.1  PRINT #1{00 00 01 00 00 }; TAB 7{00 00 07 00 00 };"by Animated ALex"
	LD A,1
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,1
	CALL runtimeSetStream
	LD HL,7
	CALL runtimeTab
	LD HL,STRING_18	;by Animated ALex
	CALL runtimePrintString
	CALL runtimePrintNewline
	POP AF
	LD (ZX_P_FLAG),A
	LD HL,0
	CALL runtimeSetStream
ZXBASIC_LINE_675:
; 675  FOR l=1 TO 5: PRINT  AT 19,4; INK 1;l$(l): PAUSE 1:
	LD HL,675
	LD (23621),HL
; 		675.1  FOR l=1{00 00 01 00 00 } TO 5{00 00 05 00 00 }
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,1
	LD (ZXBASIC_VAR_l),HL
	LD HL,5
	LD (ZXBASIC_VAR_for_l),HL
FOR_7:
; 		675.2  PRINT  AT 19{00 00 13 00 00 },4{00 00 04 00 00 }; INK 1{00 00 01 00 00 };l$(l)
	LD A,2
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,19
	LD HL,4
	CALL runtimePrintAt
	LD HL,1
	CALL runtimeLocalInk
	LD HL,(ZXBASIC_VAR_l_string)
	PUSH HL
	LD HL,(ZXBASIC_VAR_l)
	POP BC
	CALL runtimeCharAt
	CALL runtimePrintString
	CALL runtimePrintNewline
	LD A,(ZX_ATTR_P)
	LD (ZX_ATTR_T),A
	POP AF
	LD (ZX_P_FLAG),A
	CALL ZXFreeTempCompact
; 		675.3  PAUSE 1{00 00 01 00 00 }
	LD A,3
	LD (23623),a
	LD HL,1
	CALL runtimePause
ZXBASIC_LINE_680:
; 680  BEEP 0.04, INT ( RND *10)+5: BEEP 0.03, INT ( RND *10)+1: NEXT l
	LD HL,680
	LD (23621),HL
; 		680.1  BEEP 0.04{7c 23 d7 0a 3d }, INT ( RND *10{00 00 0a 00 00 })+5{00 00 05 00 00 }
	LD A,1
	LD (23623),a
	LD HL,FLOAT_6	;0.04
	CALL runtimePushFloatVar
; INT
; RND
	CALL runtimeRND
	LD HL,10
; *
	CALL runtimeIntToFloat
	RST $28
	DB $04	;MULT
	DB $38	;END CALC
	CALL runtimeFloatToInt
	LD DE,HL
	LD HL,5
; +
	ADD HL,DE
	CALL runtimeIntToFloat
	CALL $03F8
; 		680.2  BEEP 0.03{7b 75 c2 8f 5c }, INT ( RND *10{00 00 0a 00 00 })+1{00 00 01 00 00 }
	LD A,2
	LD (23623),a
	LD HL,FLOAT_7	;0.03
	CALL runtimePushFloatVar
; INT
; RND
	CALL runtimeRND
	LD HL,10
; *
	CALL runtimeIntToFloat
	RST $28
	DB $04	;MULT
	DB $38	;END CALC
	CALL runtimeFloatToInt
	INC HL
; +
	CALL runtimeIntToFloat
	CALL $03F8
; 		680.3  NEXT l
	LD A,3
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,(ZXBASIC_VAR_l)
	INC HL
	LD (ZXBASIC_VAR_l),HL
	LD DE,(ZXBASIC_VAR_for_l)
	EX HL,DE
	SUB HL,DE
	JP NC,FOR_7
ZXBASIC_LINE_681:
; 681  IF  INKEY$ ="1" THEN  LET r=1: RETURN 
	LD HL,681
	LD (23621),HL
; 		681.1  IF  INKEY$ ="1" THEN  LET r=1{00 00 01 00 00 }
	LD A,1
	LD (23623),a
; INKEY$
	CALL runtimeInkey
	LD DE,HL
	LD HL,STRING_19	;1
; =
	CALL runtimeEqualString
	LD A,L
	CP 0
	JP Z,ZXB_LABEL_14
; 		681.2  LET r=1{00 00 01 00 00 }
	LD A,2
	LD (23623),a
	LD HL,1
	LD (ZXBASIC_VAR_r),HL
; 		681.3  RETURN 
	LD A,3
	LD (23623),a
	CALL runtimeCheckBreak
	RET
ZXB_LABEL_14:
ZXBASIC_LINE_682:
; 682  IF  INKEY$ ="2" THEN  LET r=2: RETURN 
	LD HL,682
	LD (23621),HL
; 		682.1  IF  INKEY$ ="2" THEN  LET r=2{00 00 02 00 00 }
	LD A,1
	LD (23623),a
; INKEY$
	CALL runtimeInkey
	LD DE,HL
	LD HL,STRING_20	;2
; =
	CALL runtimeEqualString
	LD A,L
	CP 0
	JP Z,ZXB_LABEL_15
; 		682.2  LET r=2{00 00 02 00 00 }
	LD A,2
	LD (23623),a
	LD HL,2
	LD (ZXBASIC_VAR_r),HL
; 		682.3  RETURN 
	LD A,3
	LD (23623),a
	CALL runtimeCheckBreak
	RET
ZXB_LABEL_15:
ZXBASIC_LINE_685:
; 685  FOR l=1 TO 4: PRINT  AT 19,4; INK 1;l$(l): FOR a=1 TO 5: NEXT a: NEXT l
	LD HL,685
	LD (23621),HL
; 		685.1  FOR l=1{00 00 01 00 00 } TO 4{00 00 04 00 00 }
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,1
	LD (ZXBASIC_VAR_l),HL
	LD HL,4
	LD (ZXBASIC_VAR_for_l),HL
FOR_8:
; 		685.2  PRINT  AT 19{00 00 13 00 00 },4{00 00 04 00 00 }; INK 1{00 00 01 00 00 };l$(l)
	LD A,2
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,19
	LD HL,4
	CALL runtimePrintAt
	LD HL,1
	CALL runtimeLocalInk
	LD HL,(ZXBASIC_VAR_l_string)
	PUSH HL
	LD HL,(ZXBASIC_VAR_l)
	POP BC
	CALL runtimeCharAt
	CALL runtimePrintString
	CALL runtimePrintNewline
	LD A,(ZX_ATTR_P)
	LD (ZX_ATTR_T),A
	POP AF
	LD (ZX_P_FLAG),A
	CALL ZXFreeTempCompact
; 		685.3  FOR a=1{00 00 01 00 00 } TO 5{00 00 05 00 00 }
	LD A,3
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,1
	LD (ZXBASIC_VAR_a),HL
	LD HL,5
	LD (ZXBASIC_VAR_for_a),HL
FOR_9:
; 		685.4  NEXT a
	LD A,4
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,(ZXBASIC_VAR_a)
	INC HL
	LD (ZXBASIC_VAR_a),HL
	LD DE,(ZXBASIC_VAR_for_a)
	EX HL,DE
	SUB HL,DE
	JP NC,FOR_9
; 		685.5  NEXT l
	LD A,5
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,(ZXBASIC_VAR_l)
	INC HL
	LD (ZXBASIC_VAR_l),HL
	LD DE,(ZXBASIC_VAR_for_l)
	EX HL,DE
	SUB HL,DE
	JP NC,FOR_8
ZXBASIC_LINE_690:
; 690  GOTO 675
	LD HL,690
	LD (23621),HL
; 		690.1  GOTO 675{00 00 a3 02 00 }
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	JP ZXBASIC_LINE_675
ZXBASIC_LINE_700:
; 700  REM *** COMPLETE *** 
	LD HL,700
	LD (23621),HL
	LD A,1
	LD (23623),a
ZXBASIC_LINE_710:
; 710  PRINT  AT 1,15;" "
	LD HL,710
	LD (23621),HL
; 		710.1  PRINT  AT 1{00 00 01 00 00 },15{00 00 0f 00 00 };" "
	LD A,1
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,1
	LD HL,15
	CALL runtimePrintAt
	LD HL,STRING_1	; 
	CALL runtimePrintString
	CALL runtimePrintNewline
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_720:
; 720  FOR a=0 TO 7: INK 0: POKE 23680,7: POKE 23681,72+a: LPRINT "C O M P L E T E D": NEXT a
	LD HL,720
	LD (23621),HL
; 		720.1  FOR a=0{00 00 00 00 00 } TO 7{00 00 07 00 00 }
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,0
	LD (ZXBASIC_VAR_a),HL
	LD HL,7
	LD (ZXBASIC_VAR_for_a),HL
FOR_10:
; 		720.2  INK 0{00 00 00 00 00 }
	LD A,2
	LD (23623),a
	LD HL,0
	CALL runtimeInk
; 		720.3  POKE 23680{00 00 80 5c 00 },7{00 00 07 00 00 }
	LD A,3
	LD (23623),a
	LD HL,23680
	LD DE,7
	LD (HL),E
; 		720.4  POKE 23681{00 00 81 5c 00 },72{00 00 48 00 00 }+a
	LD A,4
	LD (23623),a
	LD HL,23681
	PUSH HL
	LD DE,72
	LD HL,(ZXBASIC_VAR_a)
; +
	ADD HL,DE
	POP DE
	EX HL,DE
	LD (HL),E
; 		720.5  LPRINT "C O M P L E T E D"
	LD A,5
	LD (23623),a
	LD A,3
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,STRING_21	;C O M P L E T E D
	CALL runtimePrintString
	CALL runtimePrintNewline
	POP AF
	LD (ZX_P_FLAG),A
; 		720.6  NEXT a
	LD A,6
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,(ZXBASIC_VAR_a)
	INC HL
	LD (ZXBASIC_VAR_a),HL
	LD DE,(ZXBASIC_VAR_for_a)
	EX HL,DE
	SUB HL,DE
	JP NC,FOR_10
ZXBASIC_LINE_730:
; 730   PRINT  AT 16,11; INK  INT ( RND *8)+1;"WELL DONE"
	LD HL,730
	LD (23621),HL
; 		730.1  PRINT  AT 16{00 00 10 00 00 },11{00 00 0b 00 00 }; INK  INT ( RND *8{00 00 08 00 00 })+1{00 00 01 00 00 };"WELL DONE"
	LD A,1
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,16
	LD HL,11
	CALL runtimePrintAt
; INT
; RND
	CALL runtimeRND
	LD HL,8
; *
	CALL runtimeIntToFloat
	RST $28
	DB $04	;MULT
	DB $38	;END CALC
	CALL runtimeFloatToInt
	INC HL
; +
	CALL runtimeLocalInk
	LD HL,STRING_22	;WELL DONE
	CALL runtimePrintString
	CALL runtimePrintNewline
	LD A,(ZX_ATTR_P)
	LD (ZX_ATTR_T),A
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_740:
; 740  BEEP 0.003, INT ( RND *50)+5: IF  INKEY$  <> "" THEN  CLS : GOTO 20
	LD HL,740
	LD (23621),HL
; 		740.1  BEEP 0.003{78 44 9b a5 e3 }, INT ( RND *50{00 00 32 00 00 })+5{00 00 05 00 00 }
	LD A,1
	LD (23623),a
	LD HL,FLOAT_8	;0.003
	CALL runtimePushFloatVar
; INT
; RND
	CALL runtimeRND
	LD HL,50
; *
	CALL runtimeIntToFloat
	RST $28
	DB $04	;MULT
	DB $38	;END CALC
	CALL runtimeFloatToInt
	LD DE,HL
	LD HL,5
; +
	ADD HL,DE
	CALL runtimeIntToFloat
	CALL $03F8
; 		740.2  IF  INKEY$  <> "" THEN  CLS 
	LD A,2
	LD (23623),a
; INKEY$
	CALL runtimeInkey
	LD DE,HL
	LD HL,STRING_0	;
; <>
	CALL runtimeUnequalString
	LD A,L
	CP 0
	JP Z,ZXB_LABEL_16
; 		740.3  CLS 
	LD A,3
	LD (23623),a
	CALL runtimeCls
; 		740.4  GOTO 20{00 00 14 00 00 }
	LD A,4
	LD (23623),a
	CALL runtimeCheckBreak
	JP ZXBASIC_LINE_20
ZXB_LABEL_16:
ZXBASIC_LINE_750:
; 750  FOR w=1 TO 5
	LD HL,750
	LD (23621),HL
; 		750.1  FOR w=1{00 00 01 00 00 } TO 5{00 00 05 00 00 }
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,1
	LD (ZXBASIC_VAR_w),HL
	LD HL,5
	LD (ZXBASIC_VAR_for_w),HL
FOR_11:
ZXBASIC_LINE_760:
; 760  GOSUB 1000
	LD HL,760
	LD (23621),HL
; 		760.1  GOSUB 1000{00 00 e8 03 00 }
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	CALL ZXBASIC_LINE_1000
ZXBASIC_LINE_770:
; 770  NEXT w
	LD HL,770
	LD (23621),HL
; 		770.1  NEXT w
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,(ZXBASIC_VAR_w)
	INC HL
	LD (ZXBASIC_VAR_w),HL
	LD DE,(ZXBASIC_VAR_for_w)
	EX HL,DE
	SUB HL,DE
	JP NC,FOR_11
ZXBASIC_LINE_780:
; 780  GOTO 730
	LD HL,780
	LD (23621),HL
; 		780.1  GOTO 730{00 00 da 02 00 }
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	JP ZXBASIC_LINE_730
ZXBASIC_LINE_790:
; 790  REM *** Variables ***
	LD HL,790
	LD (23621),HL
	LD A,1
	LD (23623),a
ZXBASIC_LINE_810:
; 810  LET q=0: LET a=0: LET b=1: LET c=5
	LD HL,810
	LD (23621),HL
; 		810.1  LET q=0{00 00 00 00 00 }
	LD A,1
	LD (23623),a
	LD HL,0
	LD (ZXBASIC_VAR_q),HL
; 		810.2  LET a=0{00 00 00 00 00 }
	LD A,2
	LD (23623),a
	LD HL,0
	LD (ZXBASIC_VAR_a),HL
; 		810.3  LET b=1{00 00 01 00 00 }
	LD A,3
	LD (23623),a
	LD HL,1
	LD (ZXBASIC_VAR_b),HL
; 		810.4  LET c=5{00 00 05 00 00 }
	LD A,4
	LD (23623),a
	LD HL,5
	LD (ZXBASIC_VAR_c),HL
ZXBASIC_LINE_815:
; 815  LET lf=5
	LD HL,815
	LD (23621),HL
; 		815.1  LET lf=5{00 00 05 00 00 }
	LD A,1
	LD (23623),a
	LD HL,5
	LD (ZXBASIC_VAR_lf),HL
ZXBASIC_LINE_820:
; 820  LET wall=260: LET w=1: LET v=9
	LD HL,820
	LD (23621),HL
; 		820.1  LET wall=260{00 00 04 01 00 }
	LD A,1
	LD (23623),a
	LD HL,260
	LD (ZXBASIC_VAR_wall),HL
; 		820.2  LET w=1{00 00 01 00 00 }
	LD A,2
	LD (23623),a
	LD HL,1
	LD (ZXBASIC_VAR_w),HL
; 		820.3  LET v=9{00 00 09 00 00 }
	LD A,3
	LD (23623),a
	LD HL,9
	LD (ZXBASIC_VAR_v),HL
ZXBASIC_LINE_830:
; 830  LET d=8: LET e=1: LET f=2
	LD HL,830
	LD (23621),HL
; 		830.1  LET d=8{00 00 08 00 00 }
	LD A,1
	LD (23623),a
	LD HL,8
	LD (ZXBASIC_VAR_d),HL
; 		830.2  LET e=1{00 00 01 00 00 }
	LD A,2
	LD (23623),a
	LD HL,1
	LD (ZXBASIC_VAR_e),HL
; 		830.3  LET f=2{00 00 02 00 00 }
	LD A,3
	LD (23623),a
	LD HL,2
	LD (ZXBASIC_VAR_f),HL
ZXBASIC_LINE_840:
; 840  LET h=14: LET j=1
	LD HL,840
	LD (23621),HL
; 		840.1  LET h=14{00 00 0e 00 00 }
	LD A,1
	LD (23623),a
	LD HL,14
	LD (ZXBASIC_VAR_h),HL
; 		840.2  LET j=1{00 00 01 00 00 }
	LD A,2
	LD (23623),a
	LD HL,1
	LD (ZXBASIC_VAR_j),HL
ZXBASIC_LINE_850:
; 850  LET y=20: LET x=10: LET oy=y: LET ox=x
	LD HL,850
	LD (23621),HL
; 		850.1  LET y=20{00 00 14 00 00 }
	LD A,1
	LD (23623),a
	LD HL,20
	LD (ZXBASIC_VAR_y),HL
; 		850.2  LET x=10{00 00 0a 00 00 }
	LD A,2
	LD (23623),a
	LD HL,10
	LD (ZXBASIC_VAR_x),HL
; 		850.3  LET oy=y
	LD A,3
	LD (23623),a
	LD HL,(ZXBASIC_VAR_y)
	LD (ZXBASIC_VAR_oy),HL
; 		850.4  LET ox=x
	LD A,4
	LD (23623),a
	LD HL,(ZXBASIC_VAR_x)
	LD (ZXBASIC_VAR_ox),HL
ZXBASIC_LINE_860:
; 860  LET i=1: LET p=8: LET o=1: LET n=1
	LD HL,860
	LD (23621),HL
; 		860.1  LET i=1{00 00 01 00 00 }
	LD A,1
	LD (23623),a
	LD HL,1
	LD (ZXBASIC_VAR_i),HL
; 		860.2  LET p=8{00 00 08 00 00 }
	LD A,2
	LD (23623),a
	LD HL,8
	LD (ZXBASIC_VAR_p),HL
; 		860.3  LET o=1{00 00 01 00 00 }
	LD A,3
	LD (23623),a
	LD HL,1
	LD (ZXBASIC_VAR_o),HL
; 		860.4  LET n=1{00 00 01 00 00 }
	LD A,4
	LD (23623),a
	LD HL,1
	LD (ZXBASIC_VAR_n),HL
ZXBASIC_LINE_870:
; 870  FOR u=1 TO 2: READ a$(u): NEXT u
	LD HL,870
	LD (23621),HL
; 		870.1  FOR u=1{00 00 01 00 00 } TO 2{00 00 02 00 00 }
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,1
	LD (ZXBASIC_VAR_u),HL
	LD HL,2
	LD (ZXBASIC_VAR_for_u),HL
FOR_12:
; 		870.2  READ a$(u)
	LD A,2
	LD (23623),a
	LD HL,(ZXBASIC_VAR_u)
	LD DE,9
	CALL runtimeMult16bit
	LD DE,HL
	LD HL,ZXBASIC_VAR_a_string
	ADD HL,DE
	PUSH HL
	LD HL,(DATAPTR)
	PUSH HL
	LD BC,(HL)
	INC HL
	INC HL
	ADD HL,BC
	LD (DATAPTR),HL
	POP HL
	POP DE
	LD BC,9
	CALL runtimeStoreStringVarFix
; 		870.3  NEXT u
	LD A,3
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,(ZXBASIC_VAR_u)
	INC HL
	LD (ZXBASIC_VAR_u),HL
	LD DE,(ZXBASIC_VAR_for_u)
	EX HL,DE
	SUB HL,DE
	JP NC,FOR_12
ZXBASIC_LINE_880:
; 880  RETURN 
	LD HL,880
	LD (23621),HL
; 		880.1  RETURN 
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	RET
ZXBASIC_LINE_890:
; 890  PAPER 5: CLS : PAPER 5: BORDER 0: INK 0: CLS 
	LD HL,890
	LD (23621),HL
; 		890.1  PAPER 5{00 00 05 00 00 }
	LD A,1
	LD (23623),a
	LD HL,5
	CALL runtimePaper
; 		890.2  CLS 
	LD A,2
	LD (23623),a
	CALL runtimeCls
; 		890.3  PAPER 5{00 00 05 00 00 }
	LD A,3
	LD (23623),a
	LD HL,5
	CALL runtimePaper
; 		890.4  BORDER 0{00 00 00 00 00 }
	LD A,4
	LD (23623),a
	LD HL,0
	LD A,L
	call $2297
; 		890.5  INK 0{00 00 00 00 00 }
	LD A,5
	LD (23623),a
	LD HL,0
	CALL runtimeInk
; 		890.6  CLS 
	LD A,6
	LD (23623),a
	CALL runtimeCls
ZXBASIC_LINE_895:
; 895  IF r=1 THEN  PRINT  AT 21,6; INK 1; FLASH 1;"O=left P=right Q=up "; FLASH 0
	LD HL,895
	LD (23621),HL
; 		895.1  IF r=1{00 00 01 00 00 } THEN  PRINT  AT 21{00 00 15 00 00 },6{00 00 06 00 00 }; INK 1{00 00 01 00 00 }; FLASH 1{00 00 01 00 00 };"O=left P=right Q=up "; FLASH 0{00 00 00 00 00 }
	LD A,1
	LD (23623),a
	LD DE,(ZXBASIC_VAR_r)
	LD HL,1
; =
	CALL runtimeCmpHLEqDE
	LD A,L
	CP 0
	JP Z,ZXB_LABEL_17
; 		895.2  PRINT  AT 21{00 00 15 00 00 },6{00 00 06 00 00 }; INK 1{00 00 01 00 00 }; FLASH 1{00 00 01 00 00 };"O=left P=right Q=up "; FLASH 0{00 00 00 00 00 }
	LD A,2
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,21
	LD HL,6
	CALL runtimePrintAt
	LD HL,1
	CALL runtimeLocalInk
	LD HL,1
	CALL runtimeLocalFlash
	LD HL,STRING_23	;O=left P=right Q=up 
	CALL runtimePrintString
	LD HL,0
	CALL runtimeLocalFlash
	LD A,(ZX_ATTR_P)
	LD (ZX_ATTR_T),A
	POP AF
	LD (ZX_P_FLAG),A
ZXB_LABEL_17:
ZXBASIC_LINE_900:
; 900  FOR s=1 TO 20: PRINT  AT s,1; INK 5; PAPER 3;"\145\145\145\145\145": NEXT s
	LD HL,900
	LD (23621),HL
; 		900.1  FOR s=1{00 00 01 00 00 } TO 20{00 00 14 00 00 }
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,1
	LD (ZXBASIC_VAR_s),HL
	LD HL,20
	LD (ZXBASIC_VAR_for_s),HL
FOR_13:
; 		900.2  PRINT  AT s,1{00 00 01 00 00 }; INK 5{00 00 05 00 00 }; PAPER 3{00 00 03 00 00 };"\145\145\145\145\145"
	LD A,2
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,(ZXBASIC_VAR_s)
	LD HL,1
	CALL runtimePrintAt
	LD HL,5
	CALL runtimeLocalInk
	LD HL,3
	CALL runtimeLocalPaper
	LD HL,STRING_24	;\91\91\91\91\91
	CALL runtimePrintString
	CALL runtimePrintNewline
	LD A,(ZX_ATTR_P)
	LD (ZX_ATTR_T),A
	POP AF
	LD (ZX_P_FLAG),A
; 		900.3  NEXT s
	LD A,3
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,(ZXBASIC_VAR_s)
	INC HL
	LD (ZXBASIC_VAR_s),HL
	LD DE,(ZXBASIC_VAR_for_s)
	EX HL,DE
	SUB HL,DE
	JP NC,FOR_13
ZXBASIC_LINE_910:
; 910  FOR s=1 TO 20: PRINT  AT s,26; INK 5; PAPER 3;"\145\145\145\145\145": NEXT s
	LD HL,910
	LD (23621),HL
; 		910.1  FOR s=1{00 00 01 00 00 } TO 20{00 00 14 00 00 }
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,1
	LD (ZXBASIC_VAR_s),HL
	LD HL,20
	LD (ZXBASIC_VAR_for_s),HL
FOR_14:
; 		910.2  PRINT  AT s,26{00 00 1a 00 00 }; INK 5{00 00 05 00 00 }; PAPER 3{00 00 03 00 00 };"\145\145\145\145\145"
	LD A,2
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,(ZXBASIC_VAR_s)
	LD HL,26
	CALL runtimePrintAt
	LD HL,5
	CALL runtimeLocalInk
	LD HL,3
	CALL runtimeLocalPaper
	LD HL,STRING_24	;\91\91\91\91\91
	CALL runtimePrintString
	CALL runtimePrintNewline
	LD A,(ZX_ATTR_P)
	LD (ZX_ATTR_T),A
	POP AF
	LD (ZX_P_FLAG),A
; 		910.3  NEXT s
	LD A,3
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,(ZXBASIC_VAR_s)
	INC HL
	LD (ZXBASIC_VAR_s),HL
	LD DE,(ZXBASIC_VAR_for_s)
	EX HL,DE
	SUB HL,DE
	JP NC,FOR_14
ZXBASIC_LINE_920:
; 920  FOR g=0 TO 31: PRINT  AT 7,g; CHR$ 143: NEXT g
	LD HL,920
	LD (23621),HL
; 		920.1  FOR g=0{00 00 00 00 00 } TO 31{00 00 1f 00 00 }
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,0
	LD (ZXBASIC_VAR_g),HL
	LD HL,31
	LD (ZXBASIC_VAR_for_g),HL
FOR_15:
; 		920.2  PRINT  AT 7{00 00 07 00 00 },g; CHR$ 143{00 00 8f 00 00 }
	LD A,2
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,7
	LD HL,(ZXBASIC_VAR_g)
	CALL runtimePrintAt
; CHR$
	LD HL,143
	CALL runtimeChr
	CALL runtimePrintString
	CALL runtimePrintNewline
	POP AF
	LD (ZX_P_FLAG),A
	CALL ZXFreeTempCompact
; 		920.3  NEXT g
	LD A,3
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,(ZXBASIC_VAR_g)
	INC HL
	LD (ZXBASIC_VAR_g),HL
	LD DE,(ZXBASIC_VAR_for_g)
	EX HL,DE
	SUB HL,DE
	JP NC,FOR_15
ZXBASIC_LINE_930:
; 930  FOR g=31 TO 0 STEP -1: PRINT  AT 13,g; CHR$ 143: NEXT g
	LD HL,930
	LD (23621),HL
; 		930.1  FOR g=31{00 00 1f 00 00 } TO 0{00 00 00 00 00 } STEP -1{00 00 01 00 00 }
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,31
	LD (ZXBASIC_VAR_g),HL
	LD HL,0
	LD (ZXBASIC_VAR_for_g),HL
	LD HL,1
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	LD (ZXBASIC_VAR_for_g_step),HL
FOR_16:
; 		930.2  PRINT  AT 13{00 00 0d 00 00 },g; CHR$ 143{00 00 8f 00 00 }
	LD A,2
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,13
	LD HL,(ZXBASIC_VAR_g)
	CALL runtimePrintAt
; CHR$
	LD HL,143
	CALL runtimeChr
	CALL runtimePrintString
	CALL runtimePrintNewline
	POP AF
	LD (ZX_P_FLAG),A
	CALL ZXFreeTempCompact
; 		930.3  NEXT g
	LD A,3
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,(ZXBASIC_VAR_g)
	LD BC,(ZXBASIC_VAR_for_g_step)
	LD A,B
	ADD HL,BC
	LD (ZXBASIC_VAR_g),HL
	LD DE,(ZXBASIC_VAR_for_g)
	AND $80
	JR Z,FOR_16_1
	SUB HL,DE
	JP Z,FOR_16_2
	JP NC,FOR_16
	JR FOR_16_2
FOR_16_1:
	EX HL,DE
	SUB HL,DE
	JP NC,FOR_16
FOR_16_2:
ZXBASIC_LINE_935:
; 935  IF r=1 THEN  PRINT  AT 21,6; INK 1;"                    "
	LD HL,935
	LD (23621),HL
; 		935.1  IF r=1{00 00 01 00 00 } THEN  PRINT  AT 21{00 00 15 00 00 },6{00 00 06 00 00 }; INK 1{00 00 01 00 00 };"                    "
	LD A,1
	LD (23623),a
	LD DE,(ZXBASIC_VAR_r)
	LD HL,1
; =
	CALL runtimeCmpHLEqDE
	LD A,L
	CP 0
	JP Z,ZXB_LABEL_18
; 		935.2  PRINT  AT 21{00 00 15 00 00 },6{00 00 06 00 00 }; INK 1{00 00 01 00 00 };"                    "
	LD A,2
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,21
	LD HL,6
	CALL runtimePrintAt
	LD HL,1
	CALL runtimeLocalInk
	LD HL,STRING_25	;                    
	CALL runtimePrintString
	CALL runtimePrintNewline
	LD A,(ZX_ATTR_P)
	LD (ZX_ATTR_T),A
	POP AF
	LD (ZX_P_FLAG),A
ZXB_LABEL_18:
ZXBASIC_LINE_940:
; 940  FOR g=0 TO 21: PRINT  AT g,6; CHR$ 143;: NEXT g: FOR g=0 TO 21: PRINT  AT g,25; CHR$ 143: NEXT g
	LD HL,940
	LD (23621),HL
; 		940.1  FOR g=0{00 00 00 00 00 } TO 21{00 00 15 00 00 }
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,0
	LD (ZXBASIC_VAR_g),HL
	LD HL,21
	LD (ZXBASIC_VAR_for_g),HL
FOR_17:
; 		940.2  PRINT  AT g,6{00 00 06 00 00 }; CHR$ 143{00 00 8f 00 00 };
	LD A,2
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,(ZXBASIC_VAR_g)
	LD HL,6
	CALL runtimePrintAt
; CHR$
	LD HL,143
	CALL runtimeChr
	CALL runtimePrintString
	POP AF
	LD (ZX_P_FLAG),A
	CALL ZXFreeTempCompact
; 		940.3  NEXT g
	LD A,3
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,(ZXBASIC_VAR_g)
	INC HL
	LD (ZXBASIC_VAR_g),HL
	LD DE,(ZXBASIC_VAR_for_g)
	EX HL,DE
	SUB HL,DE
	JP NC,FOR_17
; 		940.4  FOR g=0{00 00 00 00 00 } TO 21{00 00 15 00 00 }
	LD A,4
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,0
	LD (ZXBASIC_VAR_g),HL
	LD HL,21
	LD (ZXBASIC_VAR_for_g),HL
FOR_18:
; 		940.5  PRINT  AT g,25{00 00 19 00 00 }; CHR$ 143{00 00 8f 00 00 }
	LD A,5
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,(ZXBASIC_VAR_g)
	LD HL,25
	CALL runtimePrintAt
; CHR$
	LD HL,143
	CALL runtimeChr
	CALL runtimePrintString
	CALL runtimePrintNewline
	POP AF
	LD (ZX_P_FLAG),A
	CALL ZXFreeTempCompact
; 		940.6  NEXT g
	LD A,6
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,(ZXBASIC_VAR_g)
	INC HL
	LD (ZXBASIC_VAR_g),HL
	LD DE,(ZXBASIC_VAR_for_g)
	EX HL,DE
	SUB HL,DE
	JP NC,FOR_18
ZXBASIC_LINE_950:
; 950  PRINT  AT 10,18;"\143\143\143\143\143\143\143\143"
	LD HL,950
	LD (23621),HL
; 		950.1  PRINT  AT 10{00 00 0a 00 00 },18{00 00 12 00 00 };"\143\143\143\143\143\143\143\143"
	LD A,1
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,10
	LD HL,18
	CALL runtimePrintAt
	LD HL,STRING_26	;\8f\8f\8f\8f\8f\8f\8f\8f
	CALL runtimePrintString
	CALL runtimePrintNewline
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_960:
; 960  INK 3: PLOT 0,0: DRAW 255,0: DRAW 0,175: DRAW -255,0: DRAW 0,-175: PLOT 6,7: DRAW 242,0: DRAW 0,161: DRAW -242,0: DRAW 0,-161
	LD HL,960
	LD (23621),HL
; 		960.1  INK 3{00 00 03 00 00 }
	LD A,1
	LD (23623),a
	LD HL,3
	CALL runtimeInk
; 		960.2  PLOT 0{00 00 00 00 00 },0{00 00 00 00 00 }
	LD A,2
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,0
	LD HL,0
	CALL runtimePlot
	POP AF
	LD (ZX_P_FLAG),A
; 		960.3  DRAW 255{00 00 ff 00 00 },0{00 00 00 00 00 }
	LD A,3
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,255
	LD HL,0
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		960.4  DRAW 0{00 00 00 00 00 },175{00 00 af 00 00 }
	LD A,4
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,0
	LD HL,175
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		960.5  DRAW -255{00 00 ff 00 00 },0{00 00 00 00 00 }
	LD A,5
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,255
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	LD DE,HL
	LD HL,0
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		960.6  DRAW 0{00 00 00 00 00 },-175{00 00 af 00 00 }
	LD A,6
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,0
	PUSH HL
	LD HL,175
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	POP DE
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		960.7  PLOT 6{00 00 06 00 00 },7{00 00 07 00 00 }
	LD A,7
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,6
	LD HL,7
	CALL runtimePlot
	POP AF
	LD (ZX_P_FLAG),A
; 		960.8  DRAW 242{00 00 f2 00 00 },0{00 00 00 00 00 }
	LD A,8
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,242
	LD HL,0
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		960.9  DRAW 0{00 00 00 00 00 },161{00 00 a1 00 00 }
	LD A,9
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,0
	LD HL,161
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		960.10  DRAW -242{00 00 f2 00 00 },0{00 00 00 00 00 }
	LD A,10
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,242
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	LD DE,HL
	LD HL,0
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		960.11  DRAW 0{00 00 00 00 00 },-161{00 00 a1 00 00 }
	LD A,11
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,0
	PUSH HL
	LD HL,161
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	POP DE
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_970:
; 970  PRINT  AT 8,10;"SKILL LEVEL"; AT 9,12;"1 or 2?"
	LD HL,970
	LD (23621),HL
; 		970.1  PRINT  AT 8{00 00 08 00 00 },10{00 00 0a 00 00 };"SKILL LEVEL"; AT 9{00 00 09 00 00 },12{00 00 0c 00 00 };"1 or 2?"
	LD A,1
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,8
	LD HL,10
	CALL runtimePrintAt
	LD HL,STRING_27	;SKILL LEVEL
	CALL runtimePrintString
	LD DE,9
	LD HL,12
	CALL runtimePrintAt
	LD HL,STRING_28	;1 or 2?
	CALL runtimePrintString
	CALL runtimePrintNewline
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_990:
; 990  GOSUB wall
	LD HL,990
	LD (23621),HL
; 		990.1  GOSUB wall
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	LD DE,(ZXBASIC_VAR_wall)
	LD HL,ZXLINES
	CALL runtimeFindLine
	CALL runtimeVarCall
ZXBASIC_LINE_995:
; 995  IF  INKEY$ ="1" THEN  PRINT  AT 8,10;"           "; AT 9,12;"       ": LET a=11: GOTO 1000
	LD HL,995
	LD (23621),HL
; 		995.1  IF  INKEY$ ="1" THEN  PRINT  AT 8{00 00 08 00 00 },10{00 00 0a 00 00 };"           "; AT 9{00 00 09 00 00 },12{00 00 0c 00 00 };"       "
	LD A,1
	LD (23623),a
; INKEY$
	CALL runtimeInkey
	LD DE,HL
	LD HL,STRING_19	;1
; =
	CALL runtimeEqualString
	LD A,L
	CP 0
	JP Z,ZXB_LABEL_19
; 		995.2  PRINT  AT 8{00 00 08 00 00 },10{00 00 0a 00 00 };"           "; AT 9{00 00 09 00 00 },12{00 00 0c 00 00 };"       "
	LD A,2
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,8
	LD HL,10
	CALL runtimePrintAt
	LD HL,STRING_29	;           
	CALL runtimePrintString
	LD DE,9
	LD HL,12
	CALL runtimePrintAt
	LD HL,STRING_30	;       
	CALL runtimePrintString
	CALL runtimePrintNewline
	POP AF
	LD (ZX_P_FLAG),A
; 		995.3  LET a=11{00 00 0b 00 00 }
	LD A,3
	LD (23623),a
	LD HL,11
	LD (ZXBASIC_VAR_a),HL
; 		995.4  GOTO 1000{00 00 e8 03 00 }
	LD A,4
	LD (23623),a
	CALL runtimeCheckBreak
	JP ZXBASIC_LINE_1000
ZXB_LABEL_19:
ZXBASIC_LINE_996:
; 996  IF  INKEY$ ="2" THEN  PRINT  AT 8,10;"           "; AT 9,12;"       ": LET a=17: GOTO 1000
	LD HL,996
	LD (23621),HL
; 		996.1  IF  INKEY$ ="2" THEN  PRINT  AT 8{00 00 08 00 00 },10{00 00 0a 00 00 };"           "; AT 9{00 00 09 00 00 },12{00 00 0c 00 00 };"       "
	LD A,1
	LD (23623),a
; INKEY$
	CALL runtimeInkey
	LD DE,HL
	LD HL,STRING_20	;2
; =
	CALL runtimeEqualString
	LD A,L
	CP 0
	JP Z,ZXB_LABEL_20
; 		996.2  PRINT  AT 8{00 00 08 00 00 },10{00 00 0a 00 00 };"           "; AT 9{00 00 09 00 00 },12{00 00 0c 00 00 };"       "
	LD A,2
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,8
	LD HL,10
	CALL runtimePrintAt
	LD HL,STRING_29	;           
	CALL runtimePrintString
	LD DE,9
	LD HL,12
	CALL runtimePrintAt
	LD HL,STRING_30	;       
	CALL runtimePrintString
	CALL runtimePrintNewline
	POP AF
	LD (ZX_P_FLAG),A
; 		996.3  LET a=17{00 00 11 00 00 }
	LD A,3
	LD (23623),a
	LD HL,17
	LD (ZXBASIC_VAR_a),HL
; 		996.4  GOTO 1000{00 00 e8 03 00 }
	LD A,4
	LD (23623),a
	CALL runtimeCheckBreak
	JP ZXBASIC_LINE_1000
ZXB_LABEL_20:
ZXBASIC_LINE_997:
; 997  GOTO 995
	LD HL,997
	LD (23621),HL
; 		997.1  GOTO 995{00 00 e3 03 00 }
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	JP ZXBASIC_LINE_995
ZXBASIC_LINE_1000:
; 1000  PRINT  AT 16,2; INK 1;g$(w); AT 17,2; INK 2;"\151"; AT 18,2; INK 1;l$(w)
	LD HL,1000
	LD (23621),HL
; 		1000.1  PRINT  AT 16{00 00 10 00 00 },2{00 00 02 00 00 }; INK 1{00 00 01 00 00 };g$(w); AT 17{00 00 11 00 00 },2{00 00 02 00 00 }; INK 2{00 00 02 00 00 };"\151"; AT 18{00 00 12 00 00 },2{00 00 02 00 00 }; INK 1{00 00 01 00 00 };l$(w)
	LD A,1
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,16
	LD HL,2
	CALL runtimePrintAt
	LD HL,1
	CALL runtimeLocalInk
	LD HL,(ZXBASIC_VAR_g_string)
	PUSH HL
	LD HL,(ZXBASIC_VAR_w)
	POP BC
	CALL runtimeCharAt
	CALL runtimePrintString
	LD DE,17
	LD HL,2
	CALL runtimePrintAt
	LD HL,2
	CALL runtimeLocalInk
	LD HL,STRING_31	;\97
	CALL runtimePrintString
	LD DE,18
	LD HL,2
	CALL runtimePrintAt
	LD HL,1
	CALL runtimeLocalInk
	LD HL,(ZXBASIC_VAR_l_string)
	PUSH HL
	LD HL,(ZXBASIC_VAR_w)
	POP BC
	CALL runtimeCharAt
	CALL runtimePrintString
	CALL runtimePrintNewline
	LD A,(ZX_ATTR_P)
	LD (ZX_ATTR_T),A
	POP AF
	LD (ZX_P_FLAG),A
	CALL ZXFreeTempCompact
ZXBASIC_LINE_1010:
; 1010  PRINT  AT 0,7; OVER 1; INK 3;"\144\144\144\144\144\144\144\144\144\144\144\144\144\144\144\144\144\144"; AT 21,7; INK 3;"\144\144\144\144\144\144\144\144\144\144\144\144\144\144\144\144\144\144"; OVER 0
	LD HL,1010
	LD (23621),HL
; 		1010.1  PRINT  AT 0{00 00 00 00 00 },7{00 00 07 00 00 }; OVER 1{00 00 01 00 00 }; INK 3{00 00 03 00 00 };"\144\144\144\144\144\144\144\144\144\144\144\144\144\144\144\144\144\144"; AT 21{00 00 15 00 00 },7{00 00 07 00 00 }; INK 3{00 00 03 00 00 };"\144\144\144\144\144\144\144\144\144\144\144\144\144\144\144\144\144\144"; OVER 0{00 00 00 00 00 }
	LD A,1
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,0
	LD HL,7
	CALL runtimePrintAt
	LD HL,1
	CALL runtimeLocalOver
	LD HL,3
	CALL runtimeLocalInk
	LD HL,STRING_32	;\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90
	CALL runtimePrintString
	LD DE,21
	LD HL,7
	CALL runtimePrintAt
	LD HL,3
	CALL runtimeLocalInk
	LD HL,STRING_32	;\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90
	CALL runtimePrintString
	LD HL,0
	CALL runtimeLocalOver
	LD A,(ZX_ATTR_P)
	LD (ZX_ATTR_T),A
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_1020:
; 1020  RETURN 
	LD HL,1020
	LD (23621),HL
; 		1020.1  RETURN 
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	RET
ZXBASIC_LINE_1030:
; 1030  REM *** UDG ***
	LD HL,1030
	LD (23621),HL
	LD A,1
	LD (23623),a
ZXBASIC_LINE_1040:
; 1040   FOR l=0 TO 87: READ dat: POKE  USR "a"+l,dat: NEXT l: RETURN : DATA 0,0,60,60,60,60,0,0,0,126,126,126,126,126,126,0,126,195,165,129,189,231,126,60
	LD HL,1040
	LD (23621),HL
; 		1040.1  FOR l=0{00 00 00 00 00 } TO 87{00 00 57 00 00 }
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,0
	LD (ZXBASIC_VAR_l),HL
	LD HL,87
	LD (ZXBASIC_VAR_for_l),HL
FOR_19:
; 		1040.2  READ dat
	LD A,2
	LD (23623),a
	LD HL,(DATAPTR)
	LD DE,(HL)
	INC HL
	INC HL
	LD (DATAPTR),HL
	LD (ZXBASIC_VAR_dat),DE
; 		1040.3  POKE  USR "a"+l,dat
	LD A,3
	LD (23623),a
; USR
	LD HL,STRING_33	;a
	CALL runtimeUsrUDG
	LD DE,HL
	LD HL,(ZXBASIC_VAR_l)
; +
	ADD HL,DE
	LD DE,(ZXBASIC_VAR_dat)
	LD (HL),E
; 		1040.4  NEXT l
	LD A,4
	LD (23623),a
	CALL runtimeCheckBreak
	LD HL,(ZXBASIC_VAR_l)
	INC HL
	LD (ZXBASIC_VAR_l),HL
	LD DE,(ZXBASIC_VAR_for_l)
	EX HL,DE
	SUB HL,DE
	JP NC,FOR_19
; 		1040.5  RETURN 
	LD A,5
	LD (23623),a
	CALL runtimeCheckBreak
	RET
; 		1040.6  DATA 0{00 00 00 00 00 },0{00 00 00 00 00 },60{00 00 3c 00 00 },60{00 00 3c 00 00 },60{00 00 3c 00 00 },60{00 00 3c 00 00 },0{00 00 00 00 00 },0{00 00 00 00 00 },0{00 00 00 00 00 },126{00 00 7e 00 00 },126{00 00 7e 00 00 },126{00 00 7e 00 00 },126{00 00 7e 00 00 },126{00 00 7e 00 00 },126{00 00 7e 00 00 },0{00 00 00 00 00 },126{00 00 7e 00 00 },195{00 00 c3 00 00 },165{00 00 a5 00 00 },129{00 00 81 00 00 },189{00 00 bd 00 00 },231{00 00 e7 00 00 },126{00 00 7e 00 00 },60{00 00 3c 00 00 }
	LD A,6
	LD (23623),a
ZXBASIC_LINE_1050:
; 1050  DATA 124,198,175,139,139,175,198,124,60,126,231,189,129,165,195,126,62,99,245,209,209,245,99,62,255,153,153,255,231,219,189,255
	LD HL,1050
	LD (23621),HL
; 		1050.1  DATA 124{00 00 7c 00 00 },198{00 00 c6 00 00 },175{00 00 af 00 00 },139{00 00 8b 00 00 },139{00 00 8b 00 00 },175{00 00 af 00 00 },198{00 00 c6 00 00 },124{00 00 7c 00 00 },60{00 00 3c 00 00 },126{00 00 7e 00 00 },231{00 00 e7 00 00 },189{00 00 bd 00 00 },129{00 00 81 00 00 },165{00 00 a5 00 00 },195{00 00 c3 00 00 },126{00 00 7e 00 00 },62{00 00 3e 00 00 },99{00 00 63 00 00 },245{00 00 f5 00 00 },209{00 00 d1 00 00 },209{00 00 d1 00 00 },245{00 00 f5 00 00 },99{00 00 63 00 00 },62{00 00 3e 00 00 },255{00 00 ff 00 00 },153{00 00 99 00 00 },153{00 00 99 00 00 },255{00 00 ff 00 00 },231{00 00 e7 00 00 },219{00 00 db 00 00 },189{00 00 bd 00 00 },255{00 00 ff 00 00 }
	LD A,1
	LD (23623),a
ZXBASIC_LINE_1060:
; 1060  DATA 24,126,231,173,165,181,165,60,60,36,36,36,36,36,36,102,60,36,68,132,68,52,36,71,60,36,34,33,34,44,36,226
	LD HL,1060
	LD (23621),HL
; 		1060.1  DATA 24{00 00 18 00 00 },126{00 00 7e 00 00 },231{00 00 e7 00 00 },173{00 00 ad 00 00 },165{00 00 a5 00 00 },181{00 00 b5 00 00 },165{00 00 a5 00 00 },60{00 00 3c 00 00 },60{00 00 3c 00 00 },36{00 00 24 00 00 },36{00 00 24 00 00 },36{00 00 24 00 00 },36{00 00 24 00 00 },36{00 00 24 00 00 },36{00 00 24 00 00 },102{00 00 66 00 00 },60{00 00 3c 00 00 },36{00 00 24 00 00 },68{00 00 44 00 00 },132{00 00 84 00 00 },68{00 00 44 00 00 },52{00 00 34 00 00 },36{00 00 24 00 00 },71{00 00 47 00 00 },60{00 00 3c 00 00 },36{00 00 24 00 00 },34{00 00 22 00 00 },33{00 00 21 00 00 },34{00 00 22 00 00 },44{00 00 2c 00 00 },36{00 00 24 00 00 },226{00 00 e2 00 00 }
	LD A,1
	LD (23623),a
ZXBASIC_LINE_1070:
; 1070  REM 
	LD HL,1070
	LD (23621),HL
	LD A,1
	LD (23623),a
ZXBASIC_LINE_1080:
; 1080  DATA "SINCLAIR ","BASIC"
	LD HL,1080
	LD (23621),HL
; 		1080.1  DATA "SINCLAIR ","BASIC"
	LD A,1
	LD (23623),a
ZXBASIC_LINE_1090:
; 1090  INK 3: REM Draw Box head
	LD HL,1090
	LD (23621),HL
; 		1090.1  INK 3{00 00 03 00 00 }
	LD A,1
	LD (23623),a
	LD HL,3
	CALL runtimeInk
	LD A,2
	LD (23623),a
ZXBASIC_LINE_2000:
; 2000  PLOT 110,140: DRAW 20,-3: DRAW 0,20: DRAW -20,3: DRAW 0,-20
	LD HL,2000
	LD (23621),HL
; 		2000.1  PLOT 110{00 00 6e 00 00 },140{00 00 8c 00 00 }
	LD A,1
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,110
	LD HL,140
	CALL runtimePlot
	POP AF
	LD (ZX_P_FLAG),A
; 		2000.2  DRAW 20{00 00 14 00 00 },-3{00 00 03 00 00 }
	LD A,2
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,20
	PUSH HL
	LD HL,3
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	POP DE
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		2000.3  DRAW 0{00 00 00 00 00 },20{00 00 14 00 00 }
	LD A,3
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,0
	LD HL,20
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		2000.4  DRAW -20{00 00 14 00 00 },3{00 00 03 00 00 }
	LD A,4
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,20
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	LD DE,HL
	LD HL,3
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		2000.5  DRAW 0{00 00 00 00 00 },-20{00 00 14 00 00 }
	LD A,5
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,0
	PUSH HL
	LD HL,20
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	POP DE
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_2010:
; 2010  PLOT 95,148: DRAW 10,-3: DRAW 0,10: DRAW -10,3: DRAW 0,-10
	LD HL,2010
	LD (23621),HL
; 		2010.1  PLOT 95{00 00 5f 00 00 },148{00 00 94 00 00 }
	LD A,1
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,95
	LD HL,148
	CALL runtimePlot
	POP AF
	LD (ZX_P_FLAG),A
; 		2010.2  DRAW 10{00 00 0a 00 00 },-3{00 00 03 00 00 }
	LD A,2
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,10
	PUSH HL
	LD HL,3
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	POP DE
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		2010.3  DRAW 0{00 00 00 00 00 },10{00 00 0a 00 00 }
	LD A,3
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,0
	LD HL,10
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		2010.4  DRAW -10{00 00 0a 00 00 },3{00 00 03 00 00 }
	LD A,4
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,10
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	LD DE,HL
	LD HL,3
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		2010.5  DRAW 0{00 00 00 00 00 },-10{00 00 0a 00 00 }
	LD A,5
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,0
	PUSH HL
	LD HL,10
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	POP DE
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_2020:
; 2020  PLOT 135,140: DRAW 10,-3: DRAW 0,10: DRAW -10,3: DRAW 0,-10
	LD HL,2020
	LD (23621),HL
; 		2020.1  PLOT 135{00 00 87 00 00 },140{00 00 8c 00 00 }
	LD A,1
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,135
	LD HL,140
	CALL runtimePlot
	POP AF
	LD (ZX_P_FLAG),A
; 		2020.2  DRAW 10{00 00 0a 00 00 },-3{00 00 03 00 00 }
	LD A,2
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,10
	PUSH HL
	LD HL,3
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	POP DE
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		2020.3  DRAW 0{00 00 00 00 00 },10{00 00 0a 00 00 }
	LD A,3
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,0
	LD HL,10
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		2020.4  DRAW -10{00 00 0a 00 00 },3{00 00 03 00 00 }
	LD A,4
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,10
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	LD DE,HL
	LD HL,3
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		2020.5  DRAW 0{00 00 00 00 00 },-10{00 00 0a 00 00 }
	LD A,5
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,0
	PUSH HL
	LD HL,10
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	POP DE
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_2030:
; 2030  PLOT 150,140: DRAW 5,-3: DRAW 0,5: DRAW -5,3: DRAW 0,-5
	LD HL,2030
	LD (23621),HL
; 		2030.1  PLOT 150{00 00 96 00 00 },140{00 00 8c 00 00 }
	LD A,1
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,150
	LD HL,140
	CALL runtimePlot
	POP AF
	LD (ZX_P_FLAG),A
; 		2030.2  DRAW 5{00 00 05 00 00 },-3{00 00 03 00 00 }
	LD A,2
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,5
	PUSH HL
	LD HL,3
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	POP DE
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		2030.3  DRAW 0{00 00 00 00 00 },5{00 00 05 00 00 }
	LD A,3
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,0
	LD HL,5
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		2030.4  DRAW -5{00 00 05 00 00 },3{00 00 03 00 00 }
	LD A,4
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,5
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	LD DE,HL
	LD HL,3
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		2030.5  DRAW 0{00 00 00 00 00 },-5{00 00 05 00 00 }
	LD A,5
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,0
	PUSH HL
	LD HL,5
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	POP DE
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_2040:
; 2040  PLOT 86,155: DRAW 5,-3: DRAW 0,5: DRAW -5,3: DRAW 0,-5
	LD HL,2040
	LD (23621),HL
; 		2040.1  PLOT 86{00 00 56 00 00 },155{00 00 9b 00 00 }
	LD A,1
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,86
	LD HL,155
	CALL runtimePlot
	POP AF
	LD (ZX_P_FLAG),A
; 		2040.2  DRAW 5{00 00 05 00 00 },-3{00 00 03 00 00 }
	LD A,2
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,5
	PUSH HL
	LD HL,3
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	POP DE
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		2040.3  DRAW 0{00 00 00 00 00 },5{00 00 05 00 00 }
	LD A,3
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,0
	LD HL,5
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		2040.4  DRAW -5{00 00 05 00 00 },3{00 00 03 00 00 }
	LD A,4
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,5
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	LD DE,HL
	LD HL,3
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		2040.5  DRAW 0{00 00 00 00 00 },-5{00 00 05 00 00 }
	LD A,5
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,0
	PUSH HL
	LD HL,5
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	POP DE
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_2050:
; 2050  PLOT 115,156: DRAW 3,-1: DRAW 0,-3: DRAW -3,1: DRAW 0,3: PLOT 121,154: DRAW 3,-1: DRAW 0,-3: DRAW -3,1: DRAW 0,3
	LD HL,2050
	LD (23621),HL
; 		2050.1  PLOT 115{00 00 73 00 00 },156{00 00 9c 00 00 }
	LD A,1
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,115
	LD HL,156
	CALL runtimePlot
	POP AF
	LD (ZX_P_FLAG),A
; 		2050.2  DRAW 3{00 00 03 00 00 },-1{00 00 01 00 00 }
	LD A,2
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,3
	PUSH HL
	LD HL,1
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	POP DE
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		2050.3  DRAW 0{00 00 00 00 00 },-3{00 00 03 00 00 }
	LD A,3
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,0
	PUSH HL
	LD HL,3
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	POP DE
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		2050.4  DRAW -3{00 00 03 00 00 },1{00 00 01 00 00 }
	LD A,4
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,3
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	LD DE,HL
	LD HL,1
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		2050.5  DRAW 0{00 00 00 00 00 },3{00 00 03 00 00 }
	LD A,5
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,0
	LD HL,3
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		2050.6  PLOT 121{00 00 79 00 00 },154{00 00 9a 00 00 }
	LD A,6
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,121
	LD HL,154
	CALL runtimePlot
	POP AF
	LD (ZX_P_FLAG),A
; 		2050.7  DRAW 3{00 00 03 00 00 },-1{00 00 01 00 00 }
	LD A,7
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,3
	PUSH HL
	LD HL,1
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	POP DE
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		2050.8  DRAW 0{00 00 00 00 00 },-3{00 00 03 00 00 }
	LD A,8
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,0
	PUSH HL
	LD HL,3
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	POP DE
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		2050.9  DRAW -3{00 00 03 00 00 },1{00 00 01 00 00 }
	LD A,9
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,3
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	LD DE,HL
	LD HL,1
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		2050.10  DRAW 0{00 00 00 00 00 },3{00 00 03 00 00 }
	LD A,10
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,0
	LD HL,3
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_2060:
; 2060  PLOT 110,143: DRAW 10,5: DRAW 10,-7
	LD HL,2060
	LD (23621),HL
; 		2060.1  PLOT 110{00 00 6e 00 00 },143{00 00 8f 00 00 }
	LD A,1
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,110
	LD HL,143
	CALL runtimePlot
	POP AF
	LD (ZX_P_FLAG),A
; 		2060.2  DRAW 10{00 00 0a 00 00 },5{00 00 05 00 00 }
	LD A,2
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,10
	LD HL,5
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
; 		2060.3  DRAW 10{00 00 0a 00 00 },-7{00 00 07 00 00 }
	LD A,3
	LD (23623),a
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD HL,10
	PUSH HL
	LD HL,7
	LD BC,HL
; -
	LD HL,0
	SUB HL,BC
	POP DE
	LD B,L
	LD C,E
	CALL runtimeDraw
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_2070:
; 2070  PRINT  AT 17,4; INK 1;"\146"; AT 18,4; INK 2;"\151";
	LD HL,2070
	LD (23621),HL
; 		2070.1  PRINT  AT 17{00 00 11 00 00 },4{00 00 04 00 00 }; INK 1{00 00 01 00 00 };"\146"; AT 18{00 00 12 00 00 },4{00 00 04 00 00 }; INK 2{00 00 02 00 00 };"\151";
	LD A,1
	LD (23623),a
	LD A,2
	CALL $1601	;Open Channel
	LD A,(ZX_P_FLAG)
	PUSH AF
	LD DE,17
	LD HL,4
	CALL runtimePrintAt
	LD HL,1
	CALL runtimeLocalInk
	LD HL,STRING_34	;\92
	CALL runtimePrintString
	LD DE,18
	LD HL,4
	CALL runtimePrintAt
	LD HL,2
	CALL runtimeLocalInk
	LD HL,STRING_31	;\97
	CALL runtimePrintString
	LD A,(ZX_ATTR_P)
	LD (ZX_ATTR_T),A
	POP AF
	LD (ZX_P_FLAG),A
ZXBASIC_LINE_2080:
; 2080  LET b$="\144\144\144\144\144": LET g$="\146\147\148\149\146": LET l$="\152\153\152\154\152"
	LD HL,2080
	LD (23621),HL
; 		2080.1  LET b$="\144\144\144\144\144"
	LD A,1
	LD (23623),a
	LD DE,STRING_35	;\90\90\90\90\90
	LD HL,ZXBASIC_VAR_b_string
	CALL runtimeStoreString
; 		2080.2  LET g$="\146\147\148\149\146"
	LD A,2
	LD (23623),a
	LD DE,STRING_36	;\92\93\94\95\92
	LD HL,ZXBASIC_VAR_g_string
	CALL runtimeStoreString
; 		2080.3  LET l$="\152\153\152\154\152"
	LD A,3
	LD (23623),a
	LD DE,STRING_37	;\98\99\98\9a\98
	LD HL,ZXBASIC_VAR_l_string
	CALL runtimeStoreString
ZXBASIC_LINE_3000:
; 3000  RETURN 
	LD HL,3000
	LD (23621),HL
; 		3000.1  RETURN 
	LD A,1
	LD (23623),a
	CALL runtimeCheckBreak
	RET
ZXBASIC_LINE_9998:
; 9998  STOP 
	LD HL,9998
	LD (23621),HL
ZXBASIC_VAR_a:	dw 0
ZXBASIC_VAR_a_string:	defs 60
ZXBASIC_VAR_b:	dw 0
ZXBASIC_VAR_b_string:	dw 0
ZXBASIC_VAR_c:	dw 0
ZXBASIC_VAR_d:	dw 0
ZXBASIC_VAR_dat:	dw 0
ZXBASIC_VAR_e:	dw 0
ZXBASIC_VAR_errsp:	dw 0
ZXBASIC_VAR_f:	dw 0
ZXBASIC_VAR_for_a:	dw 0
ZXBASIC_VAR_for_g:	dw 0
ZXBASIC_VAR_for_g_step:	dw 0
ZXBASIC_VAR_for_j:	dw 0
ZXBASIC_VAR_for_l:	dw 0
ZXBASIC_VAR_for_r:	dw 0
ZXBASIC_VAR_for_s:	dw 0
ZXBASIC_VAR_for_t:	dw 0
ZXBASIC_VAR_for_t_step:	dw 0
ZXBASIC_VAR_for_u:	dw 0
ZXBASIC_VAR_for_w:	dw 0
ZXBASIC_VAR_g:	dw 0
ZXBASIC_VAR_g_string:	dw 0
ZXBASIC_VAR_h:	dw 0
ZXBASIC_VAR_i:	dw 0
ZXBASIC_VAR_j:	dw 0
ZXBASIC_VAR_jj:	dw 0
ZXBASIC_VAR_k:	dw 0
ZXBASIC_VAR_k1:	dw 0
ZXBASIC_VAR_k_string:	dw 0
ZXBASIC_VAR_l:	dw 0
ZXBASIC_VAR_l_string:	dw 0
ZXBASIC_VAR_lf:	dw 0
ZXBASIC_VAR_n:	dw 0
ZXBASIC_VAR_o:	dw 0
ZXBASIC_VAR_ox:	dw 0
ZXBASIC_VAR_oy:	dw 0
ZXBASIC_VAR_p:	dw 0
ZXBASIC_VAR_q:	dw 0
ZXBASIC_VAR_r:	dw 0
ZXBASIC_VAR_s:	dw 0
ZXBASIC_VAR_s_string:	dw 0
ZXBASIC_VAR_start:	dw 0
ZXBASIC_VAR_t:	dw 0
ZXBASIC_VAR_u:	dw 0
ZXBASIC_VAR_v:	dw 0
ZXBASIC_VAR_w:	dw 0
ZXBASIC_VAR_wall:	dw 0
ZXBASIC_VAR_x:	dw 0
ZXBASIC_VAR_y:	dw 0
FLOAT_1:	db $7a, $23, $d7, $0a, $3d	;.01
FLOAT_2:	db $7c, $4c, $cc, $cc, $cc	;.05
FLOAT_3:	db $77, $03, $12, $6e, $97	;.001
FLOAT_4:	db $78, $03, $12, $6e, $97	;.002
FLOAT_5:	db $79, $03, $12, $6e, $97	;0.004
FLOAT_6:	db $7c, $23, $d7, $0a, $3d	;0.04
FLOAT_7:	db $7b, $75, $c2, $8f, $5c	;0.03
FLOAT_8:	db $78, $44, $9b, $a5, $e3	;0.003
STRING_0:	dw 0
STRING_1:	dw 1
	db	" "
STRING_10:	dw 26
	db	"S I N C L A I R  B A S I C"
STRING_11:	dw 16
	db	"Retrieve it back"
STRING_12:	dw 19
	db	"collect the letters"
STRING_13:	dw 7
	db	"1=KEYS "
STRING_14:	dw 10
	db	"2=KEMPSTON"
STRING_15:	dw 18
	db	"The EVIL BOX HEADS"
STRING_16:	dw 24
	db	"have stolen The Spectrum"
STRING_17:	dw 20
	db	"programming language"
STRING_18:	dw 16
	db	"by Animated ALex"
STRING_19:	dw 1
	db	"1"
STRING_2:	dw 19
	db	$8f, $8f, $8f, $8f, $8f, $8f, $8f, $8f, $8f, $8f, $8f, $8f, $8f, $8f, $8f, $8f, $8f, $8f, $8f
STRING_20:	dw 1
	db	"2"
STRING_21:	dw 17
	db	"C O M P L E T E D"
STRING_22:	dw 9
	db	"WELL DONE"
STRING_23:	dw 20
	db	"O=left P=right Q=up "
STRING_24:	dw 5
	db	$91, $91, $91, $91, $91
STRING_25:	dw 20
	db	"                    "
STRING_26:	dw 8
	db	$8f, $8f, $8f, $8f, $8f, $8f, $8f, $8f
STRING_27:	dw 11
	db	"SKILL LEVEL"
STRING_28:	dw 7
	db	"1 or 2?"
STRING_29:	dw 11
	db	"           "
STRING_3:	dw 1
	db	$96
STRING_30:	dw 7
	db	"       "
STRING_31:	dw 1
	db	$97
STRING_32:	dw 18
	db	$90, $90, $90, $90, $90, $90, $90, $90, $90, $90, $90, $90, $90, $90, $90, $90, $90, $90
STRING_33:	dw 1
	db	"a"
STRING_34:	dw 1
	db	$92
STRING_35:	dw 5
	db	$90, $90, $90, $90, $90
STRING_36:	dw 5
	db	$92, $93, $94, $95, $92
STRING_37:	dw 5
	db	$98, $99, $98, $9a, $98
STRING_4:	dw 9
	db	"GAME OVER"
STRING_5:	dw 1
	db	$90
STRING_6:	dw 3
	db	" ", $90, $91
STRING_7:	dw 3
	db	$91, $90, " "
STRING_8:	dw 2
	db	$90, $91
STRING_9:	dw 7
	db	" ", $90, $91, $96, $91, $90, " "
ZXLINES:
	dw 2, ZXBASIC_LINE_2
	dw 3, ZXBASIC_LINE_3
	dw 4, ZXBASIC_LINE_4
	dw 5, ZXBASIC_LINE_5
	dw 6, ZXBASIC_LINE_6
	dw 7, ZXBASIC_LINE_7
	dw 8, ZXBASIC_LINE_8
	dw 9, ZXBASIC_LINE_9
	dw 10, ZXBASIC_LINE_10
	dw 11, ZXBASIC_LINE_11
	dw 12, ZXBASIC_LINE_12
	dw 13, ZXBASIC_LINE_13
	dw 20, ZXBASIC_LINE_20
	dw 25, ZXBASIC_LINE_25
	dw 30, ZXBASIC_LINE_30
	dw 40, ZXBASIC_LINE_40
	dw 50, ZXBASIC_LINE_50
	dw 60, ZXBASIC_LINE_60
	dw 70, ZXBASIC_LINE_70
	dw 80, ZXBASIC_LINE_80
	dw 90, ZXBASIC_LINE_90
	dw 100, ZXBASIC_LINE_100
	dw 101, ZXBASIC_LINE_101
	dw 105, ZXBASIC_LINE_105
	dw 110, ZXBASIC_LINE_110
	dw 120, ZXBASIC_LINE_120
	dw 130, ZXBASIC_LINE_130
	dw 140, ZXBASIC_LINE_140
	dw 150, ZXBASIC_LINE_150
	dw 160, ZXBASIC_LINE_160
	dw 170, ZXBASIC_LINE_170
	dw 180, ZXBASIC_LINE_180
	dw 190, ZXBASIC_LINE_190
	dw 200, ZXBASIC_LINE_200
	dw 210, ZXBASIC_LINE_210
	dw 220, ZXBASIC_LINE_220
	dw 230, ZXBASIC_LINE_230
	dw 240, ZXBASIC_LINE_240
	dw 250, ZXBASIC_LINE_250
	dw 260, ZXBASIC_LINE_260
	dw 270, ZXBASIC_LINE_270
	dw 280, ZXBASIC_LINE_280
	dw 290, ZXBASIC_LINE_290
	dw 300, ZXBASIC_LINE_300
	dw 310, ZXBASIC_LINE_310
	dw 320, ZXBASIC_LINE_320
	dw 330, ZXBASIC_LINE_330
	dw 340, ZXBASIC_LINE_340
	dw 350, ZXBASIC_LINE_350
	dw 360, ZXBASIC_LINE_360
	dw 370, ZXBASIC_LINE_370
	dw 380, ZXBASIC_LINE_380
	dw 390, ZXBASIC_LINE_390
	dw 400, ZXBASIC_LINE_400
	dw 410, ZXBASIC_LINE_410
	dw 420, ZXBASIC_LINE_420
	dw 430, ZXBASIC_LINE_430
	dw 440, ZXBASIC_LINE_440
	dw 450, ZXBASIC_LINE_450
	dw 460, ZXBASIC_LINE_460
	dw 470, ZXBASIC_LINE_470
	dw 480, ZXBASIC_LINE_480
	dw 490, ZXBASIC_LINE_490
	dw 500, ZXBASIC_LINE_500
	dw 510, ZXBASIC_LINE_510
	dw 520, ZXBASIC_LINE_520
	dw 530, ZXBASIC_LINE_530
	dw 540, ZXBASIC_LINE_540
	dw 550, ZXBASIC_LINE_550
	dw 560, ZXBASIC_LINE_560
	dw 580, ZXBASIC_LINE_580
	dw 590, ZXBASIC_LINE_590
	dw 591, ZXBASIC_LINE_591
	dw 600, ZXBASIC_LINE_600
	dw 610, ZXBASIC_LINE_610
	dw 615, ZXBASIC_LINE_615
	dw 620, ZXBASIC_LINE_620
	dw 630, ZXBASIC_LINE_630
	dw 640, ZXBASIC_LINE_640
	dw 650, ZXBASIC_LINE_650
	dw 660, ZXBASIC_LINE_660
	dw 670, ZXBASIC_LINE_670
	dw 675, ZXBASIC_LINE_675
	dw 680, ZXBASIC_LINE_680
	dw 681, ZXBASIC_LINE_681
	dw 682, ZXBASIC_LINE_682
	dw 685, ZXBASIC_LINE_685
	dw 690, ZXBASIC_LINE_690
	dw 700, ZXBASIC_LINE_700
	dw 710, ZXBASIC_LINE_710
	dw 720, ZXBASIC_LINE_720
	dw 730, ZXBASIC_LINE_730
	dw 740, ZXBASIC_LINE_740
	dw 750, ZXBASIC_LINE_750
	dw 760, ZXBASIC_LINE_760
	dw 770, ZXBASIC_LINE_770
	dw 780, ZXBASIC_LINE_780
	dw 790, ZXBASIC_LINE_790
	dw 810, ZXBASIC_LINE_810
	dw 815, ZXBASIC_LINE_815
	dw 820, ZXBASIC_LINE_820
	dw 830, ZXBASIC_LINE_830
	dw 840, ZXBASIC_LINE_840
	dw 850, ZXBASIC_LINE_850
	dw 860, ZXBASIC_LINE_860
	dw 870, ZXBASIC_LINE_870
	dw 880, ZXBASIC_LINE_880
	dw 890, ZXBASIC_LINE_890
	dw 895, ZXBASIC_LINE_895
	dw 900, ZXBASIC_LINE_900
	dw 910, ZXBASIC_LINE_910
	dw 920, ZXBASIC_LINE_920
	dw 930, ZXBASIC_LINE_930
	dw 935, ZXBASIC_LINE_935
	dw 940, ZXBASIC_LINE_940
	dw 950, ZXBASIC_LINE_950
	dw 960, ZXBASIC_LINE_960
	dw 970, ZXBASIC_LINE_970
	dw 990, ZXBASIC_LINE_990
	dw 995, ZXBASIC_LINE_995
	dw 996, ZXBASIC_LINE_996
	dw 997, ZXBASIC_LINE_997
	dw 1000, ZXBASIC_LINE_1000
	dw 1010, ZXBASIC_LINE_1010
	dw 1020, ZXBASIC_LINE_1020
	dw 1030, ZXBASIC_LINE_1030
	dw 1040, ZXBASIC_LINE_1040
	dw 1050, ZXBASIC_LINE_1050
	dw 1060, ZXBASIC_LINE_1060
	dw 1070, ZXBASIC_LINE_1070
	dw 1080, ZXBASIC_LINE_1080
	dw 1090, ZXBASIC_LINE_1090
	dw 2000, ZXBASIC_LINE_2000
	dw 2010, ZXBASIC_LINE_2010
	dw 2020, ZXBASIC_LINE_2020
	dw 2030, ZXBASIC_LINE_2030
	dw 2040, ZXBASIC_LINE_2040
	dw 2050, ZXBASIC_LINE_2050
	dw 2060, ZXBASIC_LINE_2060
	dw 2070, ZXBASIC_LINE_2070
	dw 2080, ZXBASIC_LINE_2080
	dw 3000, ZXBASIC_LINE_3000
	dw 9998, ZXBASIC_LINE_9998
	dw 0, 0
ZXDATA:
	dw 11, DATA_11
	dw 12, DATA_12
	dw 13, DATA_13
	dw 1040, DATA_1040
	dw 1050, DATA_1050
	dw 1060, DATA_1060
	dw 1080, DATA_1080
	dw 0, 0
DATAPTR:	DW 0
DATA_11:
	dw 33
	dw 33
	dw 3
	dw 19
	dw 58
	dw 58
	dw 92
	dw 254
	dw 20
	dw 40
	dw 4
	dw 254
	dw 12
	dw 32
	dw 15
	dw 33
DATA_12:
	dw 256
	dw 256
	dw 256
	dw 256
	dw 256
DATA_13:
	dw 229
	dw 253
	dw 54
	dw 0
	dw 255
	dw 253
	dw 203
	dw 1
	dw 174
	dw 195
	dw 125
	dw 27
	dw 229
	dw 195
	dw 3
	dw 19
DATA_1040:
	dw 0
	dw 0
	dw 60
	dw 60
	dw 60
	dw 60
	dw 0
	dw 0
	dw 0
	dw 126
	dw 126
	dw 126
	dw 126
	dw 126
	dw 126
	dw 0
	dw 126
	dw 195
	dw 165
	dw 129
	dw 189
	dw 231
	dw 126
	dw 60
DATA_1050:
	dw 124
	dw 198
	dw 175
	dw 139
	dw 139
	dw 175
	dw 198
	dw 124
	dw 60
	dw 126
	dw 231
	dw 189
	dw 129
	dw 165
	dw 195
	dw 126
	dw 62
	dw 99
	dw 245
	dw 209
	dw 209
	dw 245
	dw 99
	dw 62
	dw 255
	dw 153
	dw 153
	dw 255
	dw 231
	dw 219
	dw 189
	dw 255
DATA_1060:
	dw 24
	dw 126
	dw 231
	dw 173
	dw 165
	dw 181
	dw 165
	dw 60
	dw 60
	dw 36
	dw 36
	dw 36
	dw 36
	dw 36
	dw 36
	dw 102
	dw 60
	dw 36
	dw 68
	dw 132
	dw 68
	dw 52
	dw 36
	dw 71
	dw 60
	dw 36
	dw 34
	dw 33
	dw 34
	dw 44
	dw 36
	dw 226
DATA_1080:
	dw 9
	db "SINCLAIR "
	dw 5
	db "BASIC"

ZX_VARIABLES:
	db 0

    DISPLAY "Compiled Basic = ", /D, $-CBASIC_START,  " bytes"
