
CBASIC_START: equ $
compiledBasic:
ZX_LINE_100:
	ld  A,(ZX_TV_FLAG)
	and A,254
	ld  (ZX_TV_FLAG),A

	LD HL, 6 
	CALL runtimePaper
	LD HL, 3
	CALL runtimeInk
ZX_LINE_105:
;105  CLS 
	CALL runtimeCls
ZX_LINE_106:
;106  GOSUB 3000{00 00 b8 0b 00 }
;p	CALL ZX_LINE_3000:
ZX_LINE_110:
;110  PRINT  INK 2{00 00 02 00 00 }; AT 0{00 00 00 00 00 },9{00 00 09 00 00 };"line fill demo"
	LD HL, 2
	CALL runtimeLocalInk
	LD HL, 0
	PUSH HL
	LD HL, 9
	POP DE
	CALL runtimePrintAt
	LD HL, STRING_0
	CALL runtimePrintString
	;CALL runtimePrintNewline
	LD A,(ZX_ATTR_P)
	LD (ZX_ATTR_T),A
ZX_LINE_120:
;120  PRINT  OVER 1{00 00 01 00 00 }; INVERSE 1{00 00 01 00 00 };  BRIGHT 1{00 00 01 00 00 }; PAPER 4{00 00 04 00 00 }; AT 21{00 00 15 00 00 },5{00 00 05 00 00 }; FLASH 1{00 00 01 00 00 };"(C)"; FLASH 0{00 00 00 00 00 };" Thomas Quester";
	LD HL, 1
	CALL runtimeLocalOver
	LD HL, 1
	CALL runtimeLocalBright
	LD HL, 4
	CALL runtimeLocalPaper
	LD HL, 1
	CALL runtimeLocalInk
	LD HL, 21
	PUSH HL
	LD HL, 5
	POP DE
	CALL runtimePrintAt
	LD HL, 1
	CALL runtimeLocalFlash
	LD HL, STRING_1
	CALL runtimePrintString
	LD HL, 0
	CALL runtimeLocalFlash
	LD HL, 1
	CALL runtimeInk
	LD HL, STRING_2
	CALL runtimePrintString
	LD A,(ZX_ATTR_P)
	LD (ZX_ATTR_T),A

ZX_LINE_1000:
;1000  LET x=1{00 00 01 00 00 }: LET y=21{00 00 15 00 00 }: LET dx=1{00 00 01 00 00 }: LET dy=1{00 00 01 00 00 }
	LD HL, 1
;Store x
	LD (ZXBASIC_VAR_x),HL
;---
	LD HL, 21
;Store y
	LD (ZXBASIC_VAR_y),HL
;---
	LD HL, 1
;Store dx
	LD (ZXBASIC_VAR_dx),HL
;---
	LD HL, 1
;Store dy
	LD (ZXBASIC_VAR_dy),HL
;---
ZX_LINE_1010:
;1010  PLOT  OVER 1{00 00 01 00 00 }; INK 3{00 00 03 00 00 };x,y
	LD HL, 1
	CALL runtimeLocalOver
	LD HL, 3
	CALL runtimeLocalInk
	LD HL, (ZXBASIC_VAR_x)
	PUSH HL
	LD HL, (ZXBASIC_VAR_y)
	POP DE
	CALL runtimePlot
	;call plot
ZX_LINE_1020:
;1020  LET x=x+dx
	LD HL, (ZXBASIC_VAR_x)
	PUSH HL
	LD HL, (ZXBASIC_VAR_dx)
;+
	POP DE
	ADD HL, DE
;---
;Store x
	LD (ZXBASIC_VAR_x),HL
;---
ZX_LINE_1030:
;1030  LET y=y+dy
	LD HL, (ZXBASIC_VAR_y)
	PUSH HL
	LD HL, (ZXBASIC_VAR_dy)
;+
	POP DE
	ADD HL, DE
;---
;Store y
	LD (ZXBASIC_VAR_y),HL
;---
ZX_LINE_1040:
;1040  IF x <= 1{00 00 01 00 00 } ORX x >= 250{00 00 fa 00 00 } THEN  LET dx=0{00 00 00 00 00 }-dx
	LD HL, (ZXBASIC_VAR_x)
	PUSH HL
	LD HL, 1
;<=
	POP DE
	SUB HL,DE
	LD HL,0
	;call c,HL1
	call z,HL1
;---
	PUSH HL
	LD HL, (ZXBASIC_VAR_x)
	PUSH HL
	LD HL, 250
;>=
	POP DE
	SUB HL,DE
	LD HL,0
	;call nc,HL1
	call z,HL1
;---
;OR
	POP DE
	LD A,L
	OR E
	LD L,A
	LD H,0
;---
;check for 0
	LD A,L
	CP 0
	JR Z,ZXB_LABEL_1
;---
	LD HL, 0
	PUSH HL
	LD HL, (ZXBASIC_VAR_dx)
;-
	POP DE
	EX HL,DE
	SUB HL, DE
;---
;Store dx
	LD (ZXBASIC_VAR_dx),HL
;---
ZXB_LABEL_1:
ZX_LINE_1050:
;1050  IF y <= 20{00 00 14 00 00 } ORX y >= 160{00 00 a0 00 00 } THEN  LET dy=0{00 00 00 00 00 }-dy
	LD HL, (ZXBASIC_VAR_y)
	PUSH HL
	LD HL, 20
;<=
	POP DE
	SUB HL,DE
	LD HL,0
	call nc,HL1
	call z,HL1
;---
	PUSH HL
	LD HL, (ZXBASIC_VAR_y)
	PUSH HL
	LD HL, 160
;>=
	POP DE
	SUB HL,DE
	LD HL,0
	call c,HL1
	call z,HL1
;---
;OR
	POP DE
	LD A,L
	OR E
	LD L,A
	LD H,0
;---
;check for 0
	LD A,L
	CP 0
	JR Z,ZXB_LABEL_2
;---
	LD HL, 0
	PUSH HL
	LD HL, (ZXBASIC_VAR_dy)
;-
	POP DE
	EX HL,DE
	SUB HL, DE
;---
;Store dy
	LD (ZXBASIC_VAR_dy),HL
;---
ZXB_LABEL_2:
ZX_LINE_1060:
;1060  GOTO 1010{00 00 f2 03 00 }
	JP ZX_LINE_1010
ZX_LINE_3000:
;3000  DATA 24{00 00 18 00 00 },60{00 00 3c 00 00 },126{00 00 7e 00 00 },219{00 00 db 00 00 },255{00 00 ff 00 00 },36{00 00 24 00 00 },90{00 00 5a 00 00 },165{00 00 a5 00 00 }
ZX_LINE_3010:
;3010  DATA 60{00 00 3c 00 00 },66{00 00 42 00 00 },102{00 00 66 00 00 },153{00 00 99 00 00 },129{00 00 81 00 00 },90{00 00 5a 00 00 },66{00 00 42 00 00 },60{00 00 3c 00 00 }
ZX_LINE_3020:
;3020  DATA 0{00 00 00 00 00 },0{00 00 00 00 00 },255{00 00 ff 00 00 },153{00 00 99 00 00 },255{00 00 ff 00 00 },129{00 00 81 00 00 },255{00 00 ff 00 00 },36{00 00 24 00 00 }
ZX_LINE_3100:
;3100  LET pos= USR "A"
	LD HL, STRING_3
	CALL runtimeUsrUDG
;Store pos
	LD (ZXBASIC_VAR_pos),HL
;---
ZX_LINE_3110:
;3110  RESTORE 3000{00 00 b8 0b 00 }
	LD HL,DATA_3000
	LD (DATAPTR),HL
ZX_LINE_3120:
;3120  LET pos=65368{00 00 58 ff 00 }
	LD HL, 65368
;Store pos
	LD (ZXBASIC_VAR_pos),HL
;---
ZX_LINE_3130:
;3130  FOR i=1{00 00 01 00 00 } TO 3{00 00 03 00 00 }
	LD HL, 1
;Store i
	LD (ZXBASIC_VAR_i),HL
;---
	LD HL, 3
	PUSH HL
ZX_LINE_3140:
;3140  FOR j=1{00 00 01 00 00 } TO 8{00 00 08 00 00 }
	LD HL, 1
	PUSH HL
FOR_0:
	LD HL, 1
;Store j
	LD (ZXBASIC_VAR_j),HL
;---
	LD HL, 8
	PUSH HL
ZX_LINE_3150:
;3150  READ a
	LD HL, 1
	PUSH HL
FOR_1:
	LD HL,(DATAPTR)

	LD DE,(HL)
	INC HL
	INC HL
	LD (DATAPTR),HL
	LD (ZXBASIC_VAR_a),DE
ZX_LINE_3160:
;3160  POKE pos,a
	LD HL, (ZXBASIC_VAR_pos)
	PUSH HL
	LD HL, (ZXBASIC_VAR_a)
	POP DE
	EX HL,DE
	LD (HL),E
ZX_LINE_3170:
;3170  LET pos=pos+1{00 00 01 00 00 }
	LD HL, (ZXBASIC_VAR_pos)
	PUSH HL
	LD HL, 1
;+
	POP DE
	ADD HL, DE
;---
;Store pos
	LD (ZXBASIC_VAR_pos),HL
;---
ZX_LINE_3180:
;3180  NEXT j
	LD HL,0
	ADD HL,SP
	LD IX,HL
	LD HL,(ZXBASIC_VAR_j)
	LD BC,(IX+0)
	ADD HL,BC
	LD (ZXBASIC_VAR_j),HL
	LD DE,(IX+2)
	EX HL,DE
	SUB HL,DE
	JP NC,FOR_1
	POP AF
	POP AF
ZX_LINE_3190:
;3190  NEXT i
	LD HL,0
	ADD HL,SP
	LD IX,HL
	LD HL,(ZXBASIC_VAR_i)
	LD BC,(IX+0)
	ADD HL,BC
	LD (ZXBASIC_VAR_i),HL
	LD DE,(IX+2)
	EX  HL,DE
	SUB HL,DE
	JP NC,FOR_0
	POP AF
	POP AF
ZX_LINE_3200:
;3200  PRINT "";
	LD HL, STRING_4
	CALL runtimePrintString
ZX_LINE_3210:
;3210  RETURN 
	RET
ZX_LINE_9999:
;9999  STOP 
ZXBASIC_VAR_a:	dw 0
ZXBASIC_VAR_dx:	dw 0
ZXBASIC_VAR_dy:	dw 0
ZXBASIC_VAR_i:	dw 0
ZXBASIC_VAR_j:	dw 0
ZXBASIC_VAR_pos:	dw 0
ZXBASIC_VAR_x:	dw 0
ZXBASIC_VAR_y:	dw 0
STRING_0:	dw 14
	db"line fill demo"
STRING_1:	dw 3
	db"(C)"
STRING_2:	dw 15
	db" Thomas Quester"
STRING_3:	dw 1
	db"A"
STRING_4:	dw 3
	db 144,145,146
DATAPTR:	DW 0
DATA_3000:
	dw 24
	dw 60
	dw 126
	dw 219
	dw 255
	dw 36
	dw 90
	dw 165
DATA_3010:
	dw 60
	dw 66
	dw 102
	dw 153
	dw 129
	dw 90
	dw 66
	dw 60
DATA_3020:
	dw 0
	dw 0
	dw 255
	dw 153
	dw 255
	dw 129
	dw 255
	dw 36


    DISPLAY "Compiled Basic = ", /D, $-CBASIC_START,  " bytes"