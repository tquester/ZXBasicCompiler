; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "ZXCompiler"
#define MyAppVersion "0,5"
#define MyAppPublisher "Quester"
#define MyAppURL "https://www.olfolders.de"
#define MyAppExeName "runide.bat"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{E3288E17-6536-4293-B178-D0BF6602C1CA}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
DisableProgramGroupPage=yes
; Uncomment the following line to run in non administrative install mode (install for current user only).
;PrivilegesRequired=lowest
OutputBaseFilename=ZXCompilerSetup
LicenseFile=C:\workspaces\github\ZXBasicCompiler\LICENSE
SolidCompression=yes
WizardStyle=modern

[Code]

var
  EmulatorPage: TInputOptionWizardPage;
   DownloadPage: TDownloadWizardPage;
  
function IsJavaInstalled(): Boolean;
var
  JavaVersion: string;
begin
  Result := false;
  if RegQueryStringValue(HKEY_CURRENT_USER, 'Environment', 'JAVA_HOME', JavaVersion) then 
    Result := true;
  if RegQueryStringValue(HKEY_CURRENT_USER, 'SOFTWARE\JavaSoft','',JavaVersion) then
    Result := true;
  if RegQueryStringValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\JavaSoft\JDK', 'CurrentVersion', JavaVersion) then  
     Result := true;
  if RegQueryStringValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\JavaSoft\Java Runtime Environment', 'CurrentVersion', JavaVersion) then
     Result := true;
end;

function OnDownloadProgress(const Url, Filename: String; const Progress, ProgressMax: Int64): Boolean;
begin
  if ProgressMax <> 0 then
    Log(Format('  %d of %d bytes done.', [Progress, ProgressMax]))
  else
    Log(Format('  %d bytes done.', [Progress]));
  Result := True;
end;


procedure InitializeWizard;
begin
  // Page for emulator selection
  EmulatorPage := CreateInputOptionPage(wpSelectDir,
    'Select ZX Spectrum Emulator', 'Which emulator would you like to use?',
    'Please select your preferred ZX Spectrum emulator, then click Next.',
    True, False);
  EmulatorPage.Add('Fuse: Lightweight and cross-platform');
  EmulatorPage.Add('ZXSpin: Windows-focused with debugging features');
  EmulatorPage.Add('Speculator: the emulator I used to write this compiler (Shareware)');
  EmulatorPage.Add('I will install my own emulator later');
  EmulatorPage.Values[0] := True; // Default selection
  if not IsJavaInstalled then
    WizardForm.WelcomeLabel2.Caption := WizardForm.WelcomeLabel2.Caption + #13#10#13#10 + 'Java will be downloaded and installed automatically during setup.';

end;

// better: https://stackoverflow.com/questions/79534298/how-to-display-real-time-download-speed-in-inno-setups-tdownloadwizardpage

procedure installJava;
  var ErrorCode: Integer;
begin
   // DownloadTemporaryFile('https://download.oracle.com/java/25/latest/jdk-25_windows-x64_bin.exe', 'java_installer.exe', '',@OnDownloadProgress);
  try
      DownloadPage := CreateDownloadPage(SetupMessage(msgWizardPreparing), SetupMessage(msgPreparingDesc), @OnDownloadProgress);
      DownloadPage.ShowBaseNameInsteadOfUrl := False;
      DownloadPage.Show;

      DownloadPage.Clear;
      DownloadPage.Add('https://download.oracle.com/java/25/latest/jdk-25_windows-x64_bin.exe', 'java_installer.exe', '');
      DownloadPage.Download;
      Exec(ExpandConstant('{tmp}\java_installer.exe'), '/quiet', '', SW_HIDE, ewWaitUntilTerminated, ErrorCode);
      DeleteFile(ExpandConstant('{tmp}\java_installer.exe'));
      DownloadPage.Hide;
    except
      if DownloadPage.AbortedByUser then
      begin
        Log('Aborted by user.');

      end;
    end;
end;

procedure CurStepChanged(CurStep: TSetupStep);
var
  DownloadResult: Boolean;
  ErrorCode: Integer;
  EmulatorURL: String;
begin
  if (CurStep = ssInstall) then begin
     if not IsJavaInstalled then installJava;
  end;
  
  if CurStep = ssPostInstall then 
   begin
    EmulatorURL := '';
    // Download selected emulator
    if EmulatorPage.Values[0] then
      EmulatorURL := 'https://sourceforge.net/projects/fuse-emulator/files/fuse/'
    else if EmulatorPage.Values[1] then
      EmulatorURL := 'https://www.zophar.net/sinclair/zx-spin.html'
    else if EmulatorPage.Values[2] then
      EmulatorURL := 'https://www.spectaculator.com/';
    if Length(EmulatorURL) > 0 then 
      ShellExec('open', EmulatorURL, '', '', SW_SHOW, ewNoWait, ErrorCode);
  end;
end;




[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "C:\workspaces\github\ZXBasicCompiler\Artikel2\Assembler\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\workspaces\github\ZXBasicCompiler\Artikel2\Assembler\zxcompiler.jar"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\workspaces\github\ZXBasicCompiler\Artikel2\Assembler\zxcompilerGui.jar"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\workspaces\github\ZXBasicCompiler\Artikel2\Assembler\zxcompilerGui_lib\json-20230618.jar"; DestDir: "{app}\zxcompilerGui_lib"; Flags: ignoreversion
Source: "C:\workspaces\github\ZXBasicCompiler\Artikel2\Assembler\zxcompilerGui_lib\org.eclipse.rap.nebula.widgets.richtext-3.11.0.jar"; DestDir: "{app}\zxcompilerGui_lib"; Flags: ignoreversion
Source: "C:\workspaces\github\ZXBasicCompiler\Artikel2\Assembler\zxcompilerGui_lib\org.eclipse.rap.rwt-3.11.0.jar"; DestDir: "{app}\zxcompilerGui_lib"; Flags: ignoreversion
Source: "C:\workspaces\github\ZXBasicCompiler\Artikel2\Assembler\zxcompilerGui_lib\org.eclipse.swt.cocoa.macosx.x86_64-4.6.jar"; DestDir: "{app}\zxcompilerGui_lib"; Flags: ignoreversion
Source: "C:\workspaces\github\ZXBasicCompiler\Artikel2\Assembler\zxcompilerGui_lib\org.eclipse.swt.gtk.linux.x86-4.6.jar"; DestDir: "{app}\zxcompilerGui_lib"; Flags: ignoreversion
Source: "C:\workspaces\github\ZXBasicCompiler\Artikel2\Assembler\zxcompilerGui_lib\org.eclipse.swt.gtk.linux.x86_64-4.6.jar"; DestDir: "{app}\zxcompilerGui_lib"; Flags: ignoreversion
Source: "C:\workspaces\github\ZXBasicCompiler\Artikel2\Assembler\zxcompilerGui_lib\org.eclipse.swt.win32.win32.x86-4.6-debug.jar"; DestDir: "{app}\zxcompilerGui_lib"; Flags: ignoreversion
Source: "C:\workspaces\github\ZXBasicCompiler\Artikel2\Assembler\zxcompilerGui_lib\org.eclipse.swt.win32.win32.x86_64-4.6.jar"; DestDir: "{app}\zxcompilerGui_lib"; Flags: ignoreversion

Source: "C:\workspaces\github\ZXBasicCompiler\Artikel2\Assembler\basicRuntime.asm"; DestDir: "{userdocs}\ZXCompiler"; Flags: ignoreversion
Source: "C:\workspaces\github\ZXBasicCompiler\Artikel2\Assembler\compiledBasic.asm"; DestDir: "{userdocs}\ZXCompiler"; Flags: ignoreversion
Source: "C:\workspaces\github\ZXBasicCompiler\Artikel2\Assembler\macros.asm"; DestDir: "{userdocs}\ZXCompiler"; Flags: ignoreversion

Source: "C:\workspaces\github\ZXBasicCompiler\Artikel2\Assembler\ZXLibrary\heap.asm"; DestDir: "{userdocs}\ZXCompiler\ZXLibrary"; Flags: ignoreversion
Source: "C:\workspaces\github\ZXBasicCompiler\Artikel2\Assembler\ZXLibrary\zxspectrum.asm"; DestDir: "{userdocs}\ZXCompiler\ZXLibrary"; Flags: ignoreversion
Source: "C:\workspaces\github\ZXBasicCompiler\Artikel2\Assembler\ZXLibrary\math.asm"; DestDir: "{userdocs}\ZXCompiler\ZXLibrary"; Flags: ignoreversion
Source: "C:\workspaces\github\ZXBasicCompiler\Artikel2\Assembler\ZXLibrary\graphics.asm"; DestDir: "{userdocs}\ZXCompiler\ZXLibrary"; Flags: ignoreversion
Source: "C:\workspaces\github\ZXBasicCompiler\Artikel2\Assembler\ZXLibrary\print.asm"; DestDir: "{userdocs}\ZXCompiler\ZXLibrary"; Flags: ignoreversion


Source: "C:\workspaces\github\ZXBasicCompiler\Artikel2\Assembler\main.asm"; DestDir: "{userdocs}\ZXCompiler"; Flags: ignoreversion
Source: "C:\workspaces\github\ZXBasicCompiler\Artikel2\Assembler\zxcompiler.jar"; DestDir: "{userdocs}\ZXCompiler"; Flags: ignoreversion
Source: "C:\workspaces\github\ZXBasicCompiler\Artikel2\Assembler\zxcompilerGui.jar"; DestDir: "{userdocs}\ZXCompiler"; Flags: ignoreversion
Source: "C:\workspaces\github\ZXBasicCompiler\Artikel2\Assembler\samples\welcome.bas"; DestDir: "{userdocs}\ZXCompiler\samples"; Flags: ignoreversion
Source: "C:\workspaces\github\ZXBasicCompiler\Artikel2\Assembler\samples\speedtest.bas"; DestDir: "{userdocs}\ZXCompiler\samples"; Flags: ignoreversion
Source: "C:\workspaces\github\ZXBasicCompiler\Artikel2\Assembler\samples\icontris.bas"; DestDir: "{userdocs}\ZXCompiler\samples\games"; Flags: ignoreversion
Source: "C:\workspaces\github\ZXBasicCompiler\Artikel2\Assembler\samples\include\keyjoystick.bas"; DestDir: "{userdocs}\ZXCompiler\samples\include"; Flags: ignoreversion
Source: "C:\workspaces\github\ZXBasicCompiler\Artikel2\Assembler\samples\luckyrace.bas"; DestDir: "{userdocs}\ZXCompiler\samples\games"; Flags: ignoreversion
Source: "C:\workspaces\github\ZXBasicCompiler\Artikel2\Assembler\samples\platform.bas"; DestDir: "{userdocs}\ZXCompiler\samples\games"; Flags: ignoreversion

; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: shellexec postinstall skipifsilent

